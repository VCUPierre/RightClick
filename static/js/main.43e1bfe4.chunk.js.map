{"version":3,"sources":["assets/Logo.png","assets/LogoWhite.png","Home/components/SocialLink/SocialLink.js","Home/components/SocialLinks/SocialLinks.js","Home/components/ProfilePic/ProfilePic.js","Home/components/Profile/Profile.js","Home/components/ModalHeader/ModalHeader.js","Home/components/MP4video/MP4video.js","Home/components/ModalMedia/ModalMedia.js","Home/components/ModalLinks/ModalLinks.js","Home/components/LinksModal/LinksModal.js","Home/components/BannerTimer/BannerTimer.js","Home/components/Banner/Banner.js","Home/components/InternalLinks/InternalLinks.js","Home/components/ExternalLinks/ExternalLinks.js","Home/components/ItemLinks/ItemLinks.js","Home/components/Still_External/Still_External.js","Home/components/Slideshow/CustomDotGroup.js","Home/components/Slideshow/ImageCarousel.js","Home/components/Slideshow/Slideshow.js","Home/components/Bio/BioModal.js","Home/components/Bio/Bio.js","Home/components/Links/Links.js","Home/components/LinkGroup/LinkGroup.js","Home/components/Home.js","assets/usersData/RazorRamon/data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","boxed","surrounded","SocialLink","props","href","link","Icon","className","secondaryColor","name","iconName","inverted","circular","bordered","color","SocialLinks","links","group","map","element","i","key","ProfilePic","Image","src","rounded","Profile","Header","as","textAlign","profileTitle","style","fontSize","title","Grid","Row","Column","profileImg","ModalHeader","data","modalAlternativeText","text","MP4video","dangerouslySetInnerHTML","__html","w","h","poster","video","useStyles","createUseStyles","customFont","ModalMedia","type","vidPoster","classes","mainMedia","deviceSize","videoPoster","wrapped","size","url","width","height","Modal","Description","mediaText","ModalLinks","Button","fluid","LinksModal","coloredButton","buttonColor","trigger","fontColor","closeIcon","centered","columns","removed","Content","image","additionalLinks","BannerTimer","Completionist","completeText","date","dateTime","renderer","days","hours","minutes","seconds","completed","zeroPad","Banner","timer","Label","ribbon","bannerSide","altColor","InternalLinks","featured","featuredText","featuredColor","featuredTimerDate","featuredTimerText","featuredAltStyle","ExternalLinks","ItemLinks","Still_External","CustomDotGroup","slides","Container","Group","Array","keys","slide","Dot","icon","defaultProps","ImageCarousel","naturalSlideWidth","naturalSlideHeight","totalSlides","collection","length","interval","speed","isPlaying","img","index","tag","Divider","Slideshow","bioContent","x","header","Subheader","content","subHeader","Bio","Links","spaced","linkSpaced","colored","Segment","raised","additionalStyle","colorOveride","LinkGroup","groupColor","groupName","Home","GridColumn","socialLinks","profileImage","linkGroups","linkData","background","logoLink","basic","logoActiveLink","target","logo","LogoWhite","LogoColor","TITLE","BACKGROUND","imageLink","SOCIAL_LINKS","surroundedInColor","LINK_GROUP_1","groupFont","typeAction","internal","pinned","App","xsScreen","useMediaPredicate","mdScreen","lgScreen","console","log","window","innerWidth","Helmet","fonts","font","weights","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43e1bfe4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.d9d4f134.png\";","module.exports = __webpack_public_path__ + \"static/media/LogoWhite.17285244.png\";","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './SocialLink.css';\n\nfunction circled(surrounded) {\n    if (surrounded === 'circular') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction boxed(surrounded) {\n    if (surrounded === 'bordered') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst SocialLink = (props) => {\n    return (\n        <a href={props.link.link}>\n            <Icon\n                className={`RLSocialPad ${\n                    props.link.secondaryColor ? props.link.secondaryColor : ''\n                }`}\n                name={props.link.iconName}\n                inverted={props.link.inverted}\n                circular={circled(props.link.surrounded)}\n                bordered={boxed(props.link.surrounded)}\n                color={props.link.color}\n            />\n        </a>\n    );\n};\n\nexport default SocialLink;\n","import React from 'react';\nimport SocialLink from '../SocialLink/SocialLink';\n\nconst SocialLinks = (props) => (\n    <div>\n        {props.links.group.map((element, i) => {\n            return <SocialLink key={`social-link-${i + 1}`} link={element} />;\n        })}\n    </div>\n);\n\nexport default SocialLinks;\n","import React from 'react'\nimport {Image} from 'semantic-ui-react'\nimport './style.css'\n// import StockImg from './image.png'\n\nconst ProfilePic = (props) => (\n    <Image src={props.src} className=\"RLFixCenter RLOneSize\" rounded />\n)\n\nexport default ProfilePic","import React from 'react';\nimport { Header, Grid } from 'semantic-ui-react';\nimport SocialLinks from '../SocialLinks/SocialLinks';\nimport ProfilePic from '../ProfilePic/ProfilePic';\nimport './profile.css';\n\nconst Profile = (props) => (\n    <div>\n        <Header\n            as=\"h1\"\n            textAlign=\"center\"\n            className={`RCTopPadding RCMarginBottom ${props.profileTitle.color}`}\n            style={{\n                fontSize: '2.5em',\n            }}\n        >\n            {props.profileTitle.title}\n        </Header>\n        <Header as=\"h2\" textAlign=\"center\" className=\"RCMarginTop\">\n            <Grid textAlign=\"center\" className=\"RCSpace-5\">\n                <Grid.Row\n                    className={`RCNoTopPadding ${\n                        // will need to enforce 'all or nothing' on surrounding social links\n                        props.links.group[0].surrounded\n                            ? 'RCMarginBottom-2'\n                            : ''\n                    }`}\n                >\n                    <SocialLinks links={props.links} />\n                </Grid.Row>\n                <Grid.Row className=\"RCNoTopPadding\">\n                    <Grid.Column textAlign=\"center\">\n                        <ProfilePic src={props.profileImg} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Header>\n    </div>\n);\n\nexport default Profile;\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport './ModalHeader.css'\n\nconst ModalHeader = (props) => {\n    return <Header as='h1' textAlign='center' className='RCborderNone RCtopPushoff'>{props.data.modalAlternativeText.text ? props.data.modalAlternativeText.text : props.data.name}</Header>\n}\n\nexport default ModalHeader","import React from 'react'\n\nconst MP4video = (props) => (\n    <div\n        dangerouslySetInnerHTML={{\n            __html:`\n            <video\n            loop\n            muted\n            playsinline\n            autoplay\n            style=\"width:${props.w}; height:${props.h}\"\n            poster=\"${props.poster}\"\n            >\n            <source type=\"video/mp4\" src=\"${props.video}\" />\n            </video>`\n        }}\n    />\n)\n\nexport default MP4video","import React from 'react';\nimport {createUseStyles} from 'react-jss';\nimport { Modal, Image } from 'semantic-ui-react'\nimport ReactPlayer from 'react-player'\nimport MP4video from '../MP4video/MP4video'\nimport './ModalMedia.css'\n\n// use react-player for video that doesn't need to auto play\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': props => props.customFont ? [props.customFont, '!important'] : ['Lato', '!important']\n    },\n})\n\nfunction whichMedia(type, link, dSize, vidPoster) {\n    if (type === \"still\"){\n        return <Image wrapped size='medium' src={link} />\n    } else if ( type === \"mp4\") {\n        return dSize === 'xs' || 'md' ? \n                <MP4video video={link} w=\"100%\" h=\"100%\" poster={vidPoster}/>\n                :\n                <MP4video video={link} w=\"50%\" h=\"50%\"/>\n    }\n    return <ReactPlayer url={link} width='100%' height='100%' />\n} \n\nconst ModalMedia = (props) => {\n    const classes = useStyles(props)\n\n    return <div className='center'>\n        {whichMedia(props.link.mainMedia.type, props.link.mainMedia.link, props.deviceSize, props.link.mainMedia.videoPoster)}\n        <Modal.Description className=\"pushOff-y\">\n            <h3 className={classes.customFont}>{props.link.mainMedia.mediaText}</h3>\n        </Modal.Description>\n    </div>\n}\n\nexport default ModalMedia","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport './ModalLinks.css'\n\nconst ModalLinks = (props) => {\n    return <Button \n            as='a' \n            href={props.link.link}\n            fluid\n            className=\"pushoffButtom\"\n            >\n                {props.link.name}\n            </Button>\n}\n\nexport default ModalLinks","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Modal, Button, Grid } from 'semantic-ui-react';\nimport ModalHeader from '../ModalHeader/ModalHeader';\nimport ModalMedia from '../ModalMedia/ModalMedia';\nimport ModalLinks from '../ModalLinks/ModalLinks';\nimport './LinkModal.css';\nimport './button.css';\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': (props) => props.customFont,\n    },\n});\n\nconst LinksModal = (props) => {\n    const classes = useStyles(props);\n    const coloredButton = props.links.buttonColor;\n\n    return (\n        <div>\n            <Modal\n                size=\"small\"\n                trigger={\n                    <Button\n                        fluid\n                        size=\"big\"\n                        color={props.links.buttonColor}\n                        {...(coloredButton\n                            ? {\n                                  className: `RCPadding fontColor ${props.links.fontColor} ${classes.customFont}`,\n                              }\n                            : {\n                                  className: `RCPadding RCWhiteBG ${classes.customFont}`,\n                              })}\n                    >\n                        {props.links.name}\n                    </Button>\n                }\n                closeIcon\n            >\n                <Grid centered columns={2}>\n                    {props.links.modalAlternativeText.removed ? (\n                        ''\n                    ) : (\n                        <Grid.Row className=\"RCTitleFix\">\n                            <ModalHeader data={props.links} />\n                        </Grid.Row>\n                    )}\n                    <Grid.Row>\n                        <Modal.Content image className=\"RCCenter RCPushDown\">\n                            <ModalMedia link={props.links} />\n                            {props.links.additionalLinks\n                                ? props.links.additionalLinks.map(\n                                      (element, i) => {\n                                          return (\n                                              <ModalLinks\n                                                  key={`links-modal-${i + 1}`}\n                                                  link={element}\n                                              />\n                                          );\n                                      }\n                                  )\n                                : ' '}\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LinksModal;\n","import React from 'react'\nimport Countdown, { zeroPad } from 'react-countdown';\n                                                                                                                       \n\nconst BannerTimer = (props) => {\n    // Random component\n    const Completionist = () => <span>{props.completeText}</span>;\n\n    // Renderer callback with condition\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{days} days {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}</span>;\n  }\n};\n\n    return <Countdown date={props.dateTime} renderer={renderer} />\n}\n\nexport default BannerTimer","import React from 'react';\nimport { Label } from 'semantic-ui-react';\nimport BannerTimer from '../BannerTimer/BannerTimer';\nimport './style.css';\n\nconst Banner = (props) => {\n    return (\n        <div>\n            {props.timer ? (\n                <Label\n                    as=\"a\"\n                    color={props.color}\n                    ribbon={props.bannerSide ? true : false}\n                    className={`${props.deviceSize} ${props.altColor}`}\n                >\n                    {props.text}{' '}\n                    <BannerTimer\n                        dateTime={props.timer}\n                        text={props.completeText}\n                    />\n                </Label>\n            ) : (\n                <Label\n                    as=\"a\"\n                    color={props.color}\n                    ribbon={props.bannerSide ? true : false}\n                    className={`${props.deviceSize} ${props.altColor}`}\n                >\n                    {props.text}\n                </Label>\n            )}\n        </div>\n    );\n};\n\nexport default Banner;\n","import React from 'react'\nimport LinksModal from '../LinksModal/LinksModal'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\n\nconst InternalLinks = (props) => {\n  return <div>\n    {props.link.featured \n    ?\n    <div>\n      <Banner \n        text={props.link.featuredText} \n        color={props.link.featuredColor} \n        bannerSide={props.link.bannerSide} \n        deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n        timer={props.link.featuredTimerDate}\n        completeText={props.link.featuredTimerText}\n        altColor={props.link.featuredAltStyle}\n      />\n      <LinksModal links={props.link} customFont={props.customFont}/>\n  </div>\n  :\n      <LinksModal links={props.link} customFont={props.customFont}/>\n  }\n</div>\n}\n\nexport default InternalLinks","import React from 'react';\nimport {createUseStyles} from 'react-jss';\nimport { Button } from 'semantic-ui-react'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\nimport './button.css'\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': props => [props.customFont, '!important'] \n    },\n});\n\nconst ExternalLinks = (props) => {\n    const classes = useStyles(props)\n    const coloredButton = props.link.buttonColor;\n\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"} \n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n                altColor={props.link.featuredAltStyle}\n            />\n            <Button \n            as='a' \n            href={props.link.link}\n            {...coloredButton ? {\n                className: `RCPadding ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n                } : {\n                className: `RCPadding RCWhiteBG ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n            }}\n            color={props.link.buttonColor} \n            size='big'\n            fluid>\n                {props.link.name}\n            </Button>\n        </div>\n        :     \n        <Button \n        as='a' \n        href={props.link.link}\n        {...coloredButton ? {\n            className: `RCPadding ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n            } : {\n            className: `RCPadding RCWhiteBG ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n        }}\n        color={props.link.buttonColor} \n        size='big'  \n        fluid>\n            {props.link.name}\n        </Button>\n    }\n    </div>\n}\n\nexport default ExternalLinks","import React from 'react'\nimport Banner from '../Banner/Banner'\nimport ModalMedia from '../ModalMedia/ModalMedia'\nimport '../Links/Links.css'\n\n\nconst ItemLinks = (props) => {\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n                altColor={props.link.featuredAltStyle}\n            />\n            <ModalMedia customFont={props.customFont} link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    </div>\n    :\n    <ModalMedia customFont={props.customFont} link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    }\n    </div>\n}\n\nexport default ItemLinks","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Image, Header } from 'semantic-ui-react';\nimport Banner from '../Banner/Banner';\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': (props) =>\n            props.customFont ? [props.customFont, '!important'] : '',\n    },\n});\n\nconst Still_External = (props) => {\n    const classes = useStyles(props);\n\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === 'xs'\n                                ? 'bannerPositionS'\n                                : props.deviceSize === 'md'\n                                ? 'bannerPositionM'\n                                : props.deviceSize === 'lg'\n                                ? 'bannerPositionL'\n                                : 'bannerPositionXL'\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <a href={props.link.link}>\n                        <Image\n                            wrapped\n                            size=\"medium\"\n                            src={props.link.mainMedia.link}\n                        />\n                        <Header\n                            as=\"h3\"\n                            textAlign=\"center\"\n                            className={`RCborderNone RCtopPushoff ${classes.customFont}`}\n                        >\n                            {props.link.modalAlternativeText.text\n                                ? props.link.modalAlternativeText.text\n                                : props.link.mainMedia.mediaText}\n                        </Header>\n                    </a>\n                </div>\n            ) : (\n                <a href={props.link.link}>\n                    <Image\n                        wrapped\n                        size=\"medium\"\n                        src={props.link.mainMedia.link}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className={`RCborderNone RCtopPushoff TEST ${classes.customFont}`}\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </a>\n            )}\n        </div>\n    );\n};\n\nexport default Still_External;\n","import PropTypes from \"prop-types\";\nimport { Dot } from \"pure-react-carousel\";\nimport React from \"react\";\nimport { Button, Container } from \"semantic-ui-react\";\n\nconst CustomDotGroup = ({ slides, size }) => (\n    <Container textAlign=\"center\">\n        <Button.Group size={size}>\n            {[...Array(slides).keys()].map((slide) => (\n                <Button as={Dot} key={slide} icon=\"circle\" slide={slide} />\n            ))}\n        </Button.Group>\n    </Container>\n);\n\nCustomDotGroup.defaultProps = {\n    size: \"mini\",\n};\n\nCustomDotGroup.propTypes = {\n    slides: PropTypes.number.isRequired,\n    size: PropTypes.string,\n};\n\nexport default CustomDotGroup;\n","import React from 'react';\nimport {\n    CarouselProvider,\n    Slide,\n    Slider,\n    Image,\n    ButtonBack,\n    ButtonNext,\n} from 'pure-react-carousel';\nimport { Divider } from 'semantic-ui-react';\nimport CustomDotGroup from './CustomDotGroup';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nconst ImageCarousel = (props) => (\n    <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={110}\n        totalSlides={props.collection.length}\n        interval={props.collection.speed}\n        isPlaying\n    >\n        <Slider>\n            {props.collection.map((img, i) => (\n                <Slide\n                    key={`Slide-image-${i + 1}`}\n                    index={i}\n                    tag=\"a\"\n                    href={props.link}\n                >\n                    <Image src={img} />\n                </Slide>\n            ))}\n        </Slider>\n\n        <Divider />\n        {props.collection.length > 7 ? (\n            <>\n                <ButtonBack className={'ui button'}>Back</ButtonBack>\n                <ButtonNext className={'ui button'}>Next</ButtonNext>\n            </>\n        ) : (\n            <CustomDotGroup slides={props.collection.length} />\n        )}\n    </CarouselProvider>\n);\n\nexport default ImageCarousel;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Banner from '../Banner/Banner';\nimport ImageCarousel from './ImageCarousel';\n// import CardCarousel from \"./CardCarousel\";\n\nconst Slideshow = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === 'xs'\n                                ? 'bannerPositionS'\n                                : props.deviceSize === 'md'\n                                ? 'bannerPositionM'\n                                : props.deviceSize === 'lg'\n                                ? 'bannerPositionL'\n                                : 'bannerPositionXL'\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <ImageCarousel\n                        collection={props.link.mainMedia.collection}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </div>\n            ) : (\n                <div>\n                    <ImageCarousel\n                        collection={props.link.mainMedia.collection}\n                        link={props.link.link}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Slideshow;\n","import React from 'react';\nimport { Modal, Button, Grid, Header } from 'semantic-ui-react';\nimport ModalHeader from '../ModalHeader/ModalHeader';\nimport './BioModal.css';\n\nconst LinksModal = (props) => {\n    const coloredButton = props.links.buttonColor;\n\n    return (\n        <div>\n            <Modal\n                size=\"small\"\n                trigger={\n                    <Button\n                        fluid\n                        size=\"big\"\n                        color={props.links.buttonColor}\n                        {...(coloredButton\n                            ? {\n                                  className: `RCPadding fontColor ${props.link.fontColor}`,\n                              }\n                            : { className: 'RCPadding RCWhiteBG' })}\n                    >\n                        {props.links.name}\n                    </Button>\n                }\n                closeIcon\n            >\n                <Grid centered columns={2}>\n                    {props.links.modalAlternativeText.removed ? (\n                        ''\n                    ) : (\n                        <Grid.Row className=\"RCTitleFix\">\n                            <ModalHeader data={props.links} />\n                        </Grid.Row>\n                    )}\n                    <Grid.Row className=\"RLBio\">\n                        <Modal.Content image className=\"RCCenter RCPushDown\">\n                            {props.links.bioContent.map((x, i) => (\n                                <Header as=\"h2\" key={`Bio-header-${i + 1}`}>\n                                    {x.header}\n                                    <Header.Subheader content={x.subHeader} />\n                                </Header>\n                            ))}\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LinksModal;\n","import React from \"react\";\nimport BioModal from \"./BioModal\";\nimport Banner from \"../Banner/Banner\";\nimport \"../Links/Links.css\";\n\nconst Bio = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === \"xs\"\n                                ? \"bannerPositionS\"\n                                : props.deviceSize === \"md\"\n                                ? \"bannerPositionM\"\n                                : props.deviceSize === \"lg\"\n                                ? \"bannerPositionL\"\n                                : \"bannerPositionXL\"\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <BioModal links={props.link} />\n                </div>\n            ) : (\n                <BioModal links={props.link} />\n            )}\n        </div>\n    );\n};\n\nexport default Bio;\n","import React from 'react';\nimport InternalLinks from '../InternalLinks/InternalLinks';\nimport ExternalLinks from '../ExternalLinks/ExternalLinks';\nimport ItemLinks from '../ItemLinks/ItemLinks';\nimport StillExternal from '../Still_External/Still_External';\nimport Slideshow from '../Slideshow/Slideshow';\nimport Bio from '../Bio/Bio';\nimport { Segment } from 'semantic-ui-react';\nimport './Links.css';\n\n// const pinnedLink = (element) => {\n//     return <Segment\n//     color='green'\n//     className=\"pushDown\">\n//         {isInternalLink(element, )}\n//     </Segment>\n// }\n// const useStyles = createUseStyles({\n//     customFont: {\n//         'font-family': props => props.customFont\n//     },\n//     //  'background-color': `${BACKGROUND.color}`\n// })\n\nconst Links = (props) => {\n    let spaced = props.link.linkSpaced;\n    let colored = props.link.colored;\n    // const classes = useStyles(props)\n\n    // const useStyles = createUseStyles({\n    //     customFont: {\n    //         'font-family': `${props.customFont}`\n    //     },\n    //     //  'background-color': `${BACKGROUND.color}`\n    // })\n\n    return (\n        <div>\n            {props.link.type === 'internal' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <InternalLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'item' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <ItemLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'still/external' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <StillExternal\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'slideshow' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <Slideshow\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'bio' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <Bio\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <ExternalLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            )}\n        </div>\n    );\n};\n\nexport default Links;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Links from '../Links/Links';\nimport './LinkGroup.css';\n\nconst LinkGroup = (props) => (\n    <div className=\"stretched\">\n        <Header as=\"h2\" color={props.links.groupColor}>\n            <span>{props.links.groupName}</span>\n        </Header>\n\n        <div>\n            {props.links.group.map((element, i) => {\n                return (\n                    <Links\n                        key={`Social-links-${i + 1}`}\n                        link={element}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                );\n            })}\n        </div>\n    </div>\n);\n\nexport default LinkGroup;\n","import React from 'react';\nimport { Grid, GridColumn, Segment, Image } from 'semantic-ui-react';\nimport Profile from './Profile/Profile';\nimport LinkGroup from './LinkGroup/LinkGroup';\nimport LogoColor from '../../assets/Logo.png';\nimport LogoWhite from '../../assets/LogoWhite.png';\nimport './Home.css';\n\nconst whichLogo = (logo) => {\n    if (logo === 'white') {\n        return LogoWhite;\n    }\n    return LogoColor;\n};\n\nconst Home = (props) => {\n    return (\n        <Grid centered className=\"RCMarginTop-1\">\n            <Grid.Row className=\"RCMarginBottom-2\">\n                <GridColumn>\n                    <Profile\n                        links={props.socialLinks}\n                        deviceSize={props.deviceSize}\n                        profileImg={props.profileImage}\n                        profileTitle={props.profileTitle}\n                    />\n                </GridColumn>\n            </Grid.Row>\n            {props.linkGroups.map((linkData, index) => {\n                return (\n                    <Grid.Row\n                        key={`linkgroup-${index + 1}`}\n                        className=\"RCNoTopPadding RCMarginBottom-2\"\n                    >\n                        <LinkGroup\n                            key={index}\n                            links={linkData}\n                            deviceSize={props.deviceSize}\n                            customFont={props.customFont}\n                        />\n                    </Grid.Row>\n                );\n            })}\n            <div>\n                {props.background.logoLink ? (\n                    <Grid.Row className=\"RCLogoZeroBottom\">\n                        <Segment basic className=\"RCLogoZeroBottom\">\n                            <Image\n                                className=\"RCLogoZeroBottom\"\n                                src={props.background.logoLink}\n                                as=\"a\"\n                                size=\"tiny\"\n                                href={props.background.logoActiveLink}\n                                target=\"_blank\"\n                                spaced\n                            />\n                        </Segment>\n                    </Grid.Row>\n                ) : (\n                    ''\n                )}\n                <Segment\n                    basic\n                    className={`${\n                        props.background.logoLink\n                            ? 'RCDoubleLogo'\n                            : 'RCMarginBottom-1'\n                    }`}\n                >\n                    <Image\n                        src={whichLogo(props.logo)}\n                        as=\"a\"\n                        size=\"small\"\n                        href=\"https://rightclickrva.com/business\"\n                        target=\"_blank\"\n                        spaced\n                    />\n                </Segment>\n            </div>\n        </Grid>\n    );\n};\nexport default Home;\n","// Custom Colors = [RLGold,RLWhite]\n/* social link custom colors {\n   circle colors: [RLWhite]\n   icon colors: [RLRed]\n}*/\nexport const TITLE = {\n    title: 'Rayzor Ramon',\n    color: 'RLWhite',\n};\nexport const LOGO = 'colored';\nexport const PROFILE_PIC =\n    'https://res.cloudinary.com/rightlink/image/upload/v1640960524/RazorRamon/razorRamon_hwe9lz.jpg';\nexport const BACKGROUND = {\n    image: false,\n    imageLink: '',\n    color: 'background-image: linear-gradient(to right bottom, #12000d, #140016, #12001e, #140728, #110e33, #0b133e, #1a194d, #2a1e5c, #3b236a, #4e2778);',\n};\nexport const SOCIAL_LINKS = {\n    group: [\n        {\n            name: 'Instagram',\n            iconName: 'instagram',\n            link: 'https://www.instagram.com/rayzor_ramon_the_barber_',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n        {\n            name: 'Twitter',\n            iconName: 'twitter',\n            link: 'https://twitter.com/rayzzorramon',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n        {\n            name: 'Facebook',\n            iconName: 'facebook f',\n            link: 'https://www.facebook.com/Rayzor-Ramon-The-Bar-Ber-202433150376767/',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n        {\n            name: 'Youtube',\n            iconName: 'youtube',\n            link: 'https://youtube.com/channel/UCwUd_9OcxPl9qOyEk6PRihA',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n    ],\n};\n// featuredTimerDate formats inclued '2020-02-01T01:02:03' or milliseconds e.g 1580518923000 - documentation here https://github.com/ndresx/react-countdown\n// for media as links you must set type as 'item' and mainMedia.type as either 'still, mp4, or other(not implemented yet)'\nexport const LINK_GROUP_1 = {\n    groupName: 'Book a Cut Today',\n    groupColor: 'RLWhite',\n    groupFont: '',\n    group: [\n        {\n            name: 'Personal Appointments',\n            link: 'https://book.thecut.co/RAYZORAMONTHEBARBER',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'red',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n        },\n        {\n            name: 'Shop Appointments',\n            link: 'https://online.getsquire.com/book/taylors-barbershop-richmond/professional/sergio-31',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'red',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n        },\n        {\n            name: 'Beard Care & Apparel',\n            link: 'https://rayzorramonthebarber.bigcartel.com',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'red',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n        },\n        {\n            name: 'Slideshow',\n            link: 'https://venmo.com/code?user_id=2920916300333056019&created=1647041532.732115&printed=1',\n            linkSpaced: true,\n            type: 'slideshow',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: true,\n            mainMedia: {\n                type: 'slideshow',\n                speed: 1000,\n                mediaText: 'Purchase a Proof',\n                collection: [\n                    'https://res.cloudinary.com/rightlink/image/upload/v1647041982/RazorRamon/proofs-2_cwuvkr.jpg',\n                    'https://res.cloudinary.com/rightlink/image/upload/v1647040173/RazorRamon/proofs-1_y0q12y.jpg',\n                ],\n            },\n            additionalLinks: [],\n            color: 'black',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n            bioContent: [],\n        },\n    ],\n};\n","import React from 'react';\nimport Home from './Home/components/Home';\nimport { useMediaPredicate } from 'react-media-hook';\n// import { createUseStyles } from 'react-jss';\nimport GoogleFontLoader from 'react-google-font-loader';\nimport {\n    LOGO,\n    BACKGROUND,\n    SOCIAL_LINKS,\n    LINK_GROUP_1,\n    TITLE,\n    PROFILE_PIC,\n} from './assets/usersData/RazorRamon/data';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\n\n// const useStyles = createUseStyles({\n// root: {\n//     height: `100%`,\n// },\n// backgroundImg: {\n//     'background-image': `url(${\n//         BACKGROUND.image ? BACKGROUND.imageLink : ''\n//     })`,\n//     'background-repeat': 'no-repeat',\n//     'background-position': '50% 45%',\n//     'background-attachment': 'fixed',\n//     'background-size': 'contain',\n// },\n//  'background-color': `${BACKGROUND.color}`\n// });\n\nconst linkGroups = [LINK_GROUP_1];\n\nconst App = () => {\n    const xsScreen = useMediaPredicate('(max-width: 430px)');\n    const mdScreen = useMediaPredicate('(max-width: 768px)');\n    const lgScreen = useMediaPredicate('(max-width: 1024px)');\n    // const classes = useStyles();\n\n    return (\n        <div>\n            {console.log('window Width', window.innerWidth)}\n            <Helmet>\n                <title>Right-Link</title>\n                <style>\n                    {`\n              .RLgradient {\n                ${\n                    BACKGROUND.imageLink\n                        ? BACKGROUND.imageLink\n                        : BACKGROUND.color\n                        ? BACKGROUND.color\n                        : ''\n                }\n               }\n                .root {\n                    height: 100%;\n                    overflow-x: hidden;\n                }\n            `}\n                </style>\n            </Helmet>\n            <GoogleFontLoader\n                fonts={[\n                    {\n                        font: LINK_GROUP_1.groupFont,\n                        weights: [400],\n                    },\n                ]}\n            />\n            <Home\n                deviceSize={\n                    xsScreen ? 'xs' : mdScreen ? 'md' : lgScreen ? 'lg' : 'xl'\n                }\n                socialLinks={SOCIAL_LINKS}\n                profileTitle={TITLE}\n                profileImage={PROFILE_PIC}\n                linkGroups={linkGroups}\n                logo={LOGO}\n                background={BACKGROUND}\n                customFont={LINK_GROUP_1.groupFont}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}