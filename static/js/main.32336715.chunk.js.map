{"version":3,"sources":["assets/Logo.png","assets/usersData/BenRvaMiles/BenRvaMiles_data.js","Home/components/SocialLink/SocialLink.js","Home/components/SocialLinks/SocialLinks.js","Home/components/ProfilePic/ProfilePic.js","Home/components/Profile/Profile.js","Home/components/ModalHeader/ModalHeader.js","Home/components/ModalMedia/ModalMedia.js","Home/components/ModalLinks/ModalLinks.js","Home/components/LinksModal/LinksModal.js","Home/components/BannerTimer/BannerTimer.js","Home/components/Banner/Banner.js","Home/components/InternalLinks/InternalLinks.js","Home/components/ExternalLinks/ExternalLinks.js","Home/components/ItemLinks/ItemLinks.js","Home/components/Links/Links.js","Home/components/LinkGroup/LinkGroup.js","Home/components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TITLE","BACKGROUND","SOCIAL_LINKS","group","name","iconName","link","color","surrounded","surroundedInColor","LINK_GROUP_1","groupName","groupColor","linkSpaced","type","typeAction","internal","featured","featuredText","featuredTimerDate","featuredTimerText","featuredColor","pinned","mainMedia","mediaText","additionalLinks","colored","buttonColor","bannerSide","additionalStyle","boxed","SocialLink","props","href","Icon","className","inverted","circular","bordered","SocialLinks","links","map","element","ProfilePic","Image","src","rounded","Profile","Header","as","textAlign","style","fontSize","Grid","Row","Column","ModalHeader","data","ModalMedia","dSize","deviceSize","wrapped","size","url","playing","muted","width","height","Modal","Description","ModalLinks","Button","fluid","LinksModal","coloredButton","trigger","closeIcon","centered","columns","Content","image","BannerTimer","Completionist","completeText","date","dateTime","renderer","days","hours","minutes","seconds","completed","zeroPad","Banner","timer","Label","ribbon","text","InternalLinks","ExternalLinks","ItemLinks","Links","spaced","Segment","raised","LinkGroup","Home","GridColumn","basic","Logo","target","useStyles","createUseStyles","backgroundImg","App","xsScreen","useMediaPredicate","mdScreen","lgScreen","classes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32336715.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.d9d4f134.png\";","export const TITLE = {\n    Title: \"Ben RVA Miles\",\n    color: \"\"\n}\nexport const PROFILE_PIC = \"https://res.cloudinary.com/rightlink/image/upload/v1597020721/BenRVAMiles/100046577_3881550598582033_578397340172288000_n_pqtkzx.jpg\"\nexport const BACKGROUND = {\n    image: false,\n    imageLink: '',\n    color: '',\n}\nexport const SOCIAL_LINKS = {\n    group: [{\n        name: \"Instagram\",\n        iconName: \"instagram\",\n        link: \"https://www.instagram.com/benrvamiles\",\n        color: \"black\",\n        surrounded: \"\",\n        surroundedInColor: false,\n    },\n    {\n        name: \"Facebook\",\n        iconName: \"facebook\",\n        link: \"https://www.facebook.com/CutsByBenRVAMiles/\",\n        color: \"black\",\n        surrounded: \"circular\",\n        surroundedInColor: false,\n    },\n    {\n        name: \"LinkedIn\",\n        iconName: \"linkedin\",\n        link: \"https://www.linkedin.com/in/benjamin-miles-127a41159\",\n        color: \"black\",\n        surrounded: \"circular\",\n        surroundedInColor: true,\n    },\n]}\n\n// featuredTimerDate formats inclued '2020-02-01T01:02:03' or milliseconds e.g 1580518923000 - documentation here https://github.com/ndresx/react-countdown\nexport const LINK_GROUP_1 = {\n    groupName: \"\",\n    groupColor: \"orange\",\n    group: [{\n            name: \"Book A Cut Today\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"item\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            pinned: true,\n            mainMedia: {\n                type: \"item\",\n                link: \"https://www.facebook.com/CutsByBenRVAMiles/videos/281443143270871/\",\n                mediaText: \"#rvabarber #BenRVAMiles\",\n            },\n            additionalLinks: [],  \n            color: \"black\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n        {\n            name: \"Book A Cut Today\",\n            link: \"https://book.thecut.co/CutsByBen\",\n            linkSpaced: true,\n            type: \"external\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            pinned: true,\n            mainMedia: {},\n            additionalLinks: [],  \n            color: \"black\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n    ]\n}\n\nexport const LINK_GROUP_2 = {\n    groupName: \"Demo Links\",\n    groupColor: \"red\",\n    group: [\n        {\n            name: \"Internal Media\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"internal\",\n            typeAction: \"\",\n            internal: true,\n            featured: false,\n            featuredText: \"\", \n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            pinned: true,\n            mainMedia: {\n                type: \"media\",\n                link: \"https://www.youtube.com/watch?v=UfQHEpf2q8k\",\n                mediaText: \"Great Cover ^^\",\n            },\n            additionalLinks: [\n                {\n                    name: 'Tidal',\n                    link: 'https://tidal.com'\n                },\n                {\n                    name: 'Spotify',\n                    link: 'https://open.spotify.com'\n                },                {\n                    name: 'Apple Music',\n                    link: 'https://music.apple.com'\n                },\n            ],\n            color: \"black\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n        {\n            name: \"Basic Banner\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"internal\",\n            typeAction: \"\",\n            internal: true,\n            featured: true,\n            featuredText: \"New Banner\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"red\",\n            pinned: false,\n            mainMedia: {\n                type: \"still\",\n                link: \"https://res.cloudinary.com/rightlink/image/upload/v1595189055/PierreR/image_ard339.png\",\n                mediaText: \"Additional Links Below\",\n            },\n            additionalLinks: [\n                {\n                    name: 'Tidal',\n                    link: 'https://tidal.com'\n                },                  {\n                    name: 'Spotify',\n                    link: 'https://spotify.com'\n                },                  {\n                    name: 'Apple Music',\n                    link: 'https://music.apple.com'\n                },                  {\n                    name: 'Sound Cloud',\n                    link: 'https://soundcloud.com'\n                },                  {\n                    name: 'Youtube',\n                    link: 'https://youtube.com'\n                },             \n            ],\n            color: \"red\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n        {\n            name: \"Countdown Banner\",\n            link: \"https://unitedmasters.com/m/5e99d519a2ca6d196513ca76\",\n            linkSpaced: true,\n            type: \"item\",\n            typeAction: \"\",\n            internal: true,\n            featured: true,\n            featuredText: \"New Content in \",\n            featuredTimerDate: \"2020-12-02T00:00:00\",\n            featuredTimerText: \"Live now\",\n            featuredColor: \"green\",\n            pinned: false,\n            mainMedia: {\n                type: \"still\",\n                link: \"https://res.cloudinary.com/rightlink/image/upload/v1595189055/PierreR/image_ard339.png\",\n                mediaText: \"Stream Now\",\n            },\n            additionalLinks: [],\n            color: \"green\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n        {\n            name: \"Attached 1 of 2\",\n            link: \"\",\n            linkSpaced: false,\n            type: \"item\",\n            typeAction: \"\",\n            internal: true,\n            featured: false,\n            featuredText: \"\", \n            featuredTimerDate: \"\",\n            featuredTimerText: \"\", \n            featuredColor: \"\",\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [\n                {\n                    name: 'Tidal',\n                    link: 'https://tidal.com'\n                },\n                {\n                    name: 'Spotify',\n                    link: 'https://spotify.com'\n                },                {\n                    name: 'Apple Music',\n                    link: 'https://applemusic.com'\n                },                {\n                    name: 'Sound Cloud',\n                    link: 'https://soundcloud.com'\n                },                {\n                    name: 'Youtube',\n                    link: 'https://youtube.com'\n                },\n            ],\n            color: \"blue\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n        {\n            name: \"Attached 2 of 2\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"item\",\n            typeAction: \"\",\n            internal: true,\n            featured: false,\n            featuredText: \"\", \n            featuredTimerDate: \"\",\n            featuredTimerText: \"\", \n            featuredColor: \"\",\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [\n                {\n                    name: 'Tidal',\n                    link: 'https://tidal.com'\n                },\n                {\n                    name: 'Spotify',\n                    link: 'https://spotify.com'\n                },                {\n                    name: 'Apple Music',\n                    link: 'https://applemusic.com'\n                },                {\n                    name: 'Sound Cloud',\n                    link: 'https://soundcloud.com'\n                },                {\n                    name: 'Youtube',\n                    link: 'https://youtube.com'\n                },\n            ],\n            color: \"blue\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n        {\n            name: \"Button Color\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"item\",\n            typeAction: \"\",\n            internal: true,\n            featured: false,\n            featuredText: \"\", \n            featuredTimerDate: \"\",\n            featuredTimerText: \"\", \n            featuredColor: \"\",\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [\n                {\n                    name: 'Tidal',\n                    link: 'https://tidal.com'\n                },\n                {\n                    name: 'Spotify',\n                    link: 'https://spotify.com'\n                },                {\n                    name: 'Apple Music',\n                    link: 'https://applemusic.com'\n                },                {\n                    name: 'Sound Cloud',\n                    link: 'https://soundcloud.com'\n                },                {\n                    name: 'Youtube',\n                    link: 'https://youtube.com'\n                },\n            ],\n            color: \"green\",\n            colored: true,\n            buttonColor: \"green\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n        },\n    ]\n}\n","import React from \"react\"\nimport { Icon } from 'semantic-ui-react'\nimport './SocialLink.css'\n\nfunction circled(surrounded) {\n    if (surrounded === \"circular\") {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction boxed(surrounded) {\n    if (surrounded === \"bordered\") {\n        return true\n    } else {\n        return false\n    }\n}\n\nconst SocialLink = (props) => {\n    return <a href={props.link.link}><Icon className='RLSocialPad' name={props.link.iconName} inverted={props.link.surroundedInColor} circular={circled(props.link.surrounded)} bordered={boxed(props.link.surrounded)} color={props.link.color} /></a>\n}\n\nexport default SocialLink","import React from 'react'\nimport SocialLink from '../SocialLink/SocialLink'\n\nconst SocialLinks = (props) => (\n    <div>\n        {props.links.group.map(element => {\n            return <SocialLink link={element}/>\n        })}\n    </div>\n)\n\nexport default SocialLinks","import React from 'react'\nimport {Image} from 'semantic-ui-react'\nimport './style.css'\n// import StockImg from './image.png'\n\nconst ProfilePic = (props) => (\n    <Image src={props.src} className=\"RLFixCenter RLOneSize\" rounded />\n)\n\nexport default ProfilePic","import React from 'react'\nimport { Header, Grid } from 'semantic-ui-react'\n// import { TITLE , PROFILE_PIC} from '../../../assets/constants'\n// import { TITLE , PROFILE_PIC} from '../../../assets/data'\nimport { TITLE, PROFILE_PIC } from '../../../assets/usersData/BenRvaMiles/BenRvaMiles_data'\nimport SocialLinks from '../SocialLinks/SocialLinks'\nimport ProfilePic from '../ProfilePic/ProfilePic'\nimport './profile.css'\n\nconst Profile = (props) => (\n    <div>\n        <Header \n        as='h1' \n        textAlign='center' \n        className={`RCTopPadding RCMarginBottom ${TITLE.color}`}\n        style={{\n            fontSize: '2.5em' \n          }}\n        >\n            {TITLE.Title}\n        </Header>\n        <Header\n        as='h2' \n        textAlign='center' \n        className='RCMarginTop'\n        >\n            <Grid textAlign='center' className='RCSpace-5'>\n                <Grid.Row>\n                    <SocialLinks links={props.links}/>\n                </Grid.Row>\n                <Grid.Row className='RCNoTopPadding'>\n                    <Grid.Column textAlign='center'>\n                        <ProfilePic src={PROFILE_PIC}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Header>\n    </div>\n)\n\nexport default Profile\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport './ModalHeader.css'\n\nconst ModalHeader = (props) => {\n    return <Header as='h1' textAlign='center' className='RCborderNone RCtopPushoff'>{props.data.name}</Header>\n}\n\nexport default ModalHeader","import React from 'react'\nimport { Modal, Image } from 'semantic-ui-react'\nimport ReactPlayer from 'react-player'\nimport './ModalMedia.css'\n\nfunction whichMedia(type, link, dSize) {\n    if (type === \"still\"){\n        return <Image wrapped size='medium' src={link} />\n    } else if ( type === \"item\") {\n        return dSize === 'xs' ? <ReactPlayer \n                url={link} \n                playing \n                muted \n                className='RCCenter' \n                width='100%' \n                height='100%'\n                />\n                :\n                <ReactPlayer \n                url={link} \n                playing \n                muted \n                className='RCCenter' \n                width='50%' \n                height='50%'\n                />\n    }\n    return <ReactPlayer url={link} width='100%' height='100%' />\n} \n\nconst ModalMedia = (props) => {\n    return <div className='center'>\n        {whichMedia(props.link.mainMedia.type, props.link.mainMedia.link, props.deviceSize)}\n        <Modal.Description className=\"pushOff-y\">\n            <h3>{props.link.mainMedia.mediaText}</h3>\n        </Modal.Description>\n    </div>\n}\n\nexport default ModalMedia","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport './ModalLinks.css'\n\nconst ModalLinks = (props) => {\n    return <Button \n            as='a' \n            href={props.link.link}\n            fluid\n            className=\"pushoffButtom\"\n            >\n                {props.link.name}\n            </Button>\n}\n\nexport default ModalLinks","import React from 'react'\nimport { Modal, Button, Grid } from 'semantic-ui-react'\nimport ModalHeader from '../ModalHeader/ModalHeader'\nimport ModalMedia from '../ModalMedia/ModalMedia'\nimport ModalLinks from '../ModalLinks/ModalLinks'\nimport './LinkModal.css'\nimport './button.css'\n\nconst LinksModal = (props) => {\n    const coloredButton = props.links.buttonColor;\n\n    return <div>\n              <Modal size='small' trigger={<Button fluid size='big' color={props.links.buttonColor} {...coloredButton ? {className: 'RCPadding'}: {className: 'RCPadding RCWhiteBG'}}>{props.links.name}</Button>} closeIcon>\n                <Grid centered columns={2} >\n                    <Grid.Row className=\"RCTitleFix\">\n                        <ModalHeader data={props.links} />\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Modal.Content image className='RCCenter RCPushDown'>\n                            <ModalMedia link={props.links} />\n                            {props.links.additionalLinks ? props.links.additionalLinks.map(element => {\n                                return <ModalLinks link={element} />\n                            })\n                            : \n                            \" \"\n                            }\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n              </Modal>\n    </div>\n}\n\nexport default LinksModal","import React from 'react'\nimport Countdown, { zeroPad } from 'react-countdown';\n                                                                                                                       \n\nconst BannerTimer = (props) => {\n    // Random component\n    const Completionist = () => <span>{props.completeText}</span>;\n\n    // Renderer callback with condition\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{days} days {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}</span>;\n  }\n};\n\n    return <Countdown date={props.dateTime} renderer={renderer} />\n}\n\nexport default BannerTimer","import React from 'react'\nimport { Label } from 'semantic-ui-react'\nimport BannerTimer from '../BannerTimer/BannerTimer'\nimport './style.css'\n\nconst Banner = (props) => {\n    return <div>\n            {props.timer ? \n                <Label as='a' color={props.color} ribbon={props.bannerSide} className={props.deviceSize}>\n                {props.text}  <BannerTimer dateTime={props.timer} text={props.completeText}/>\n                </Label>\n            :\n                <Label as='a' color={props.color} ribbon={props.bannerSide} className={props.deviceSize}>\n                    {props.text}\n                </Label>\n            }\n    </div>\n}\n\nexport default Banner","import React from 'react'\nimport LinksModal from '../LinksModal/LinksModal'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\n\nconst InternalLinks = (props) => {\n  return <div>\n    {props.link.featured \n    ?\n    <div>\n      <Banner \n        text={props.link.featuredText} \n        color={props.link.featuredColor} \n        bannerSide={props.link.bannerSide} \n        deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n        timer={props.link.featuredTimerDate}\n        completeText={props.link.featuredTimerText}\n      />\n      <LinksModal links={props.link}/>\n  </div>\n  :\n      <LinksModal links={props.link}/>\n  }\n</div>\n}\n\nexport default InternalLinks","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\nimport './button.css'\n\nconst ExternalLinks = (props) => {\n    const coloredButton = props.link.buttonColor;\n\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"} \n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n            />\n            <Button \n            as='a' \n            href={props.link.link}\n            {...coloredButton ? {className: 'RCPadding'}: {className: 'RCPadding RCWhiteBG'}}\n            color={props.link.buttonColor} \n            size='big' \n            fluid>\n                {props.link.name}\n            </Button>\n        </div>\n        :     \n        <Button \n        as='a' \n        href={props.link.link}\n        {...coloredButton ? {className: 'RCPadding'}: {className: 'RCPadding RCWhiteBG'}}\n        color={props.link.buttonColor} \n        size='big' \n        fluid>\n            {props.link.name}\n        </Button>\n    }\n    </div>\n}\n\nexport default ExternalLinks","import React from 'react'\nimport Banner from '../Banner/Banner'\nimport ModalMedia from '../ModalMedia/ModalMedia'\nimport '../Links/Links.css'\n\n\nconst ItemLinks = (props) => {\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n            />\n            <ModalMedia link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    </div>\n    :\n    <ModalMedia link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    }\n    </div>\n}\n\nexport default ItemLinks","import React from 'react'\nimport InternalLinks from '../InternalLinks/InternalLinks'\nimport ExternalLinks from '../ExternalLinks/ExternalLinks'\nimport ItemLinks from '../ItemLinks/ItemLinks'\nimport { Segment } from 'semantic-ui-react'\nimport './Links.css'\n\n// const pinnedLink = (element) => {\n//     return <Segment \n//     color='green' \n//     className=\"pushDown\">\n//         {isInternalLink(element, )}\n//     </Segment>\n// }\n\nconst Links = (props) => {\n    let spaced = props.link.linkSpaced;\n    let colored = props.link.colored;\n\n    return <div>\n    {props.link.type === \"internal\" \n    ? \n    <Segment color={props.link.color} {...(colored ? {inverted: true}: {})} {...(spaced ? {raised:true, className: `pushDown ${props.link.additionalStyle}`}: {})}>\n        <InternalLinks link={props.link} deviceSize={props.deviceSize}/> \n    </Segment>\n    : \n    props.link.type === \"item\" \n        ?\n        <Segment color={props.link.color} {...(colored ? {inverted: true}: {})} {...(spaced ? {raised:true, className: `pushDown ${props.link.additionalStyle}`}: {})}>\n            <ItemLinks link={props.link} deviceSize={props.deviceSize}/>\n        </Segment>\n        :\n        <Segment color={props.link.color} {...(colored ? {inverted: true}: {})} {...(spaced ? {raised:true, className: `pushDown ${props.link.additionalStyle}`}: {})}>\n            <ExternalLinks link={props.link} deviceSize={props.deviceSize}/>\n        </Segment>\n    }\n</div>\n}\n\nexport default Links","import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport Links from '../Links/Links'\nimport \"./LinkGroup.css\"\n\nconst LinkGroup = (props) => (\n    <div className=\"stretched\">\n        <Header as='h2'>\n            <span>\n                {props.links.groupName}\n            </span>\n        </Header>\n        \n        <div >\n            {props.links.group.map(element => {\n                return <Links link={element} deviceSize={props.deviceSize}/>\n            })}\n        </div>\n    </div>\n)\n\nexport default LinkGroup","import React from 'react';\nimport {Grid, GridColumn, Segment, Image} from 'semantic-ui-react'\nimport Profile from './Profile/Profile'\nimport LinkGroup from './LinkGroup/LinkGroup'\n// import { SOCIAL_LINKS, LINK_GROUP_1} from '../../assets/constants.js'\n// import { SOCIAL_LINKS, LINK_GROUP_1, LINK_GROUP_2, LINK_GROUP_3 } from '../../assets/data'\nimport { SOCIAL_LINKS, LINK_GROUP_1 } from '../../assets/usersData/BenRvaMiles/BenRvaMiles_data'\nimport Logo from '../../assets/Logo.png'\n\nconst Home = (props) => {\n    return <Grid centered>\n        <Grid.Row>\n            <GridColumn>\n                <Profile links={SOCIAL_LINKS} deviceSize={props.deviceSize}/>\n            </GridColumn>\n        </Grid.Row>\n        <Grid.Row>\n            <LinkGroup links={LINK_GROUP_1} deviceSize={props.deviceSize}/>\n        </Grid.Row>\n        {/* <Grid.Row>\n            <LinkGroup links={LINK_GROUP_2} deviceSize={props.deviceSize}/>\n        </Grid.Row>\n        <Grid.Row>\n            <LinkGroup links={LINK_GROUP_3} deviceSize={props.deviceSize}/>\n        </Grid.Row> */}\n        <Segment basic>\n            <Image\n            src={Logo}\n            as='a'\n            size='small'\n            href='https://rightclickrva.com/business'\n            target='_blank'\n            spaced\n            />\n        </Segment>\n    </Grid>\n    \n}\nexport default Home","import React from 'react';\nimport Home from './Home/components/Home'\nimport { useMediaPredicate } from \"react-media-hook\";\nimport {createUseStyles} from 'react-jss'\n// import { BACKGROUND } from './assets/constants'\n// import  { BACKGROUND } from './assets/data'\nimport { BACKGROUND } from './assets/usersData/BenRvaMiles/BenRvaMiles_data'\n// import DarkModeToggle from './Home/components/DarkMode/DarkMode';\n// import './styles.css';\n\nconst useStyles = createUseStyles({\n  backgroundImg: {\n    'background-image': `url(${BACKGROUND.image ? BACKGROUND.imageLink : \"\"})`,\n    'background-repeat': 'no-repeat',\n    'background-position': '50% 95%',\n    'background-attachment': 'fixed',\n    'background-size': 'contain',\n  }\n})\n//  'background-color': `${BACKGROUND.color}`\n\nconst App = () => {\n  const xsScreen = useMediaPredicate(\"(max-width: 375px)\");\n  const mdScreen = useMediaPredicate(\"(max-width: 768px)\");\n  const lgScreen = useMediaPredicate(\"(max-width: 1024px)\");\n  const classes = useStyles()\n\n  return <div className={classes.backgroundImg}>\n      {/* <DarkModeToggle /> */}\n      <Home deviceSize={xsScreen ? \"xs\" : mdScreen ? \"md\" : lgScreen ? \"lg\" : \"xl\"}/>\n    </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}