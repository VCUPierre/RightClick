{"version":3,"sources":["assets/Logo.png","assets/LogoWhite.png","Home/components/SocialLink/SocialLink.js","Home/components/SocialLinks/SocialLinks.js","Home/components/ProfilePic/ProfilePic.js","Home/components/Profile/Profile.js","Home/components/ModalHeader/ModalHeader.js","Home/components/MP4video/MP4video.js","Home/components/ModalMedia/ModalMedia.js","Home/components/ModalLinks/ModalLinks.js","Home/components/LinksModal/LinksModal.js","Home/components/BannerTimer/BannerTimer.js","Home/components/Banner/Banner.js","Home/components/InternalLinks/InternalLinks.js","Home/components/ExternalLinks/ExternalLinks.js","Home/components/ItemLinks/ItemLinks.js","Home/components/Still_External/Still_External.js","Home/components/Slideshow/CustomDotGroup.js","Home/components/Slideshow/ImageCarousel.js","Home/components/Slideshow/Slideshow.js","Home/components/Bio/BioModal.js","Home/components/Bio/Bio.js","Home/components/Links/Links.js","Home/components/LinkGroup/LinkGroup.js","Home/components/Home.js","assets/usersData/ItsCakes/data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","boxed","surrounded","SocialLink","props","href","link","Icon","className","secondaryColor","name","iconName","inverted","circular","bordered","color","SocialLinks","links","group","map","element","ProfilePic","Image","src","rounded","Profile","Header","as","textAlign","profileTitle","style","fontSize","title","Grid","Row","Column","profileImg","ModalHeader","data","modalAlternativeText","text","MP4video","dangerouslySetInnerHTML","__html","w","h","poster","video","ModalMedia","type","mainMedia","deviceSize","vidPoster","videoPoster","wrapped","size","url","width","height","Modal","Description","mediaText","ModalLinks","Button","fluid","LinksModal","coloredButton","buttonColor","trigger","fontColor","closeIcon","centered","columns","removed","Content","image","additionalLinks","BannerTimer","Completionist","completeText","date","dateTime","renderer","days","hours","minutes","seconds","completed","zeroPad","Banner","timer","Label","ribbon","bannerSide","altColor","InternalLinks","featured","featuredText","featuredColor","featuredTimerDate","featuredTimerText","featuredAltStyle","ExternalLinks","ItemLinks","Still_External","CustomDotGroup","slides","Container","Group","Array","keys","slide","Dot","key","icon","defaultProps","ImageCarousel","naturalSlideWidth","naturalSlideHeight","totalSlides","collection","length","interval","speed","isPlaying","img","i","index","Divider","Slideshow","bioContent","x","header","Subheader","content","subHeader","Bio","Links","spaced","linkSpaced","colored","Segment","raised","additionalStyle","colorOveride","LinkGroup","groupName","Home","GridColumn","socialLinks","profileImage","linkGroups","linkData","basic","logo","LogoWhite","LogoColor","target","TITLE","BACKGROUND","SOCIAL_LINKS","surroundedInColor","useStyles","createUseStyles","backgroundImg","groupColor","typeAction","internal","pinned","App","xsScreen","useMediaPredicate","mdScreen","lgScreen","classes","console","log","window","innerWidth","Helmet","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d8e6114.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.d9d4f134.png\";","module.exports = __webpack_public_path__ + \"static/media/LogoWhite.17285244.png\";","import React from \"react\"\nimport { Icon } from 'semantic-ui-react'\nimport './SocialLink.css'\n\nfunction circled(surrounded) {\n    if (surrounded === \"circular\") {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction boxed(surrounded) {\n    if (surrounded === \"bordered\") {\n        return true\n    } else {\n        return false\n    }\n}\n\nconst SocialLink = (props) => {\n    return <a href={props.link.link}><Icon className={`RLSocialPad ${props.link.secondaryColor ? props.link.secondaryColor : \"\"}`} name={props.link.iconName} inverted={props.link.inverted} circular={circled(props.link.surrounded)} bordered={boxed(props.link.surrounded)} color={props.link.color} /></a>\n}\n\nexport default SocialLink\n","import React from 'react'\nimport SocialLink from '../SocialLink/SocialLink'\n\nconst SocialLinks = (props) => (\n    <div>\n        {props.links.group.map(element => {\n            return <SocialLink link={element}/>\n        })}\n    </div>\n)\n\nexport default SocialLinks","import React from 'react'\nimport {Image} from 'semantic-ui-react'\nimport './style.css'\n// import StockImg from './image.png'\n\nconst ProfilePic = (props) => (\n    <Image src={props.src} className=\"RLFixCenter RLOneSize\" rounded />\n)\n\nexport default ProfilePic","import React from 'react'\nimport { Header, Grid } from 'semantic-ui-react'\nimport SocialLinks from '../SocialLinks/SocialLinks'\nimport ProfilePic from '../ProfilePic/ProfilePic'\nimport './profile.css'\n\nconst Profile = (props) => (\n    <div>\n        <Header \n        as='h1' \n        textAlign='center' \n        className={`RCTopPadding RCMarginBottom ${props.profileTitle.color}`}\n        style={{\n            fontSize: '2.5em' \n          }}\n        >\n            {props.profileTitle.title}\n        </Header>\n        <Header\n        as='h2' \n        textAlign='center' \n        className='RCMarginTop'\n        >\n            <Grid textAlign='center' className='RCSpace-5'>\n                <Grid.Row>\n                    <SocialLinks links={props.links}/>\n                </Grid.Row>\n                <Grid.Row className='RCNoTopPadding'>\n                    <Grid.Column textAlign='center'>\n                        <ProfilePic src={props.profileImg}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Header>\n    </div>\n)\n\nexport default Profile\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport './ModalHeader.css'\n\nconst ModalHeader = (props) => {\n    return <Header as='h1' textAlign='center' className='RCborderNone RCtopPushoff'>{props.data.modalAlternativeText.text ? props.data.modalAlternativeText.text : props.data.name}</Header>\n}\n\nexport default ModalHeader","import React from 'react'\n\nconst MP4video = (props) => (\n    <div\n        dangerouslySetInnerHTML={{\n            __html:`\n            <video\n            loop\n            muted\n            playsinline\n            autoplay\n            style=\"width:${props.w}; height:${props.h}\"\n            poster=\"${props.poster}\"\n            >\n            <source type=\"video/mp4\" src=\"${props.video}\" />\n            </video>`\n        }}\n    />\n)\n\nexport default MP4video","import React from 'react'\nimport { Modal, Image } from 'semantic-ui-react'\nimport ReactPlayer from 'react-player'\nimport MP4video from '../MP4video/MP4video'\nimport './ModalMedia.css'\n\n// use react-player for video that doesn't need to auto play\n\nfunction whichMedia(type, link, dSize, vidPoster) {\n    if (type === \"still\"){\n        return <Image wrapped size='medium' src={link} />\n    } else if ( type === \"mp4\") {\n        return dSize === 'xs' || 'md' ? \n                <MP4video video={link} w=\"100%\" h=\"100%\" poster={vidPoster}/>\n                :\n                <MP4video video={link} w=\"50%\" h=\"50%\"/>\n    }\n    return <ReactPlayer url={link} width='100%' height='100%' />\n} \n\nconst ModalMedia = (props) => {\n    return <div className='center'>\n        {whichMedia(props.link.mainMedia.type, props.link.mainMedia.link, props.deviceSize, props.link.mainMedia.videoPoster)}\n        <Modal.Description className=\"pushOff-y\">\n            <h3>{props.link.mainMedia.mediaText}</h3>\n        </Modal.Description>\n    </div>\n}\n\nexport default ModalMedia","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport './ModalLinks.css'\n\nconst ModalLinks = (props) => {\n    return <Button \n            as='a' \n            href={props.link.link}\n            fluid\n            className=\"pushoffButtom\"\n            >\n                {props.link.name}\n            </Button>\n}\n\nexport default ModalLinks","import React from \"react\";\nimport { Modal, Button, Grid } from \"semantic-ui-react\";\nimport ModalHeader from \"../ModalHeader/ModalHeader\";\nimport ModalMedia from \"../ModalMedia/ModalMedia\";\nimport ModalLinks from \"../ModalLinks/ModalLinks\";\nimport \"./LinkModal.css\";\nimport \"./button.css\";\n\nconst LinksModal = (props) => {\n    const coloredButton = props.links.buttonColor;\n\n    return (\n        <div>\n            <Modal\n                size=\"small\"\n                trigger={\n                    <Button\n                        fluid\n                        size=\"big\"\n                        color={props.links.buttonColor}\n                        {...(coloredButton\n                            ? {\n                                  className: `RCPadding fontColor ${props.links.fontColor}`,\n                              }\n                            : { className: \"RCPadding RCWhiteBG\" })}\n                    >\n                        {props.links.name}\n                    </Button>\n                }\n                closeIcon\n            >\n                <Grid centered columns={2}>\n                    {props.links.modalAlternativeText.removed ? (\n                        \"\"\n                    ) : (\n                        <Grid.Row className=\"RCTitleFix\">\n                            <ModalHeader data={props.links} />\n                        </Grid.Row>\n                    )}\n                    <Grid.Row>\n                        <Modal.Content image className=\"RCCenter RCPushDown\">\n                            <ModalMedia link={props.links} />\n                            {props.links.additionalLinks\n                                ? props.links.additionalLinks.map((element) => {\n                                      return <ModalLinks link={element} />;\n                                  })\n                                : \" \"}\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LinksModal;\n","import React from 'react'\nimport Countdown, { zeroPad } from 'react-countdown';\n                                                                                                                       \n\nconst BannerTimer = (props) => {\n    // Random component\n    const Completionist = () => <span>{props.completeText}</span>;\n\n    // Renderer callback with condition\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{days} days {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}</span>;\n  }\n};\n\n    return <Countdown date={props.dateTime} renderer={renderer} />\n}\n\nexport default BannerTimer","import React from 'react'\nimport { Label } from 'semantic-ui-react'\nimport BannerTimer from '../BannerTimer/BannerTimer'\nimport './style.css'\n\nconst Banner = (props) => {\n    return <div>\n            {props.timer ? \n                <Label as='a' color={props.color} ribbon={props.bannerSide} className={`${props.deviceSize} ${props.altColor}`}>\n                {props.text}  <BannerTimer dateTime={props.timer} text={props.completeText}/>\n                </Label>\n            :\n                <Label as='a' color={props.color} ribbon={props.bannerSide} className={`${props.deviceSize} ${props.altColor}`}>\n                    {props.text}\n                </Label>\n            }\n    </div>\n}\n\nexport default Banner","import React from 'react'\nimport LinksModal from '../LinksModal/LinksModal'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\n\nconst InternalLinks = (props) => {\n  return <div>\n    {props.link.featured \n    ?\n    <div>\n      <Banner \n        text={props.link.featuredText} \n        color={props.link.featuredColor} \n        bannerSide={props.link.bannerSide} \n        deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n        timer={props.link.featuredTimerDate}\n        completeText={props.link.featuredTimerText}\n        altColor={props.link.featuredAltStyle}\n      />\n      <LinksModal links={props.link}/>\n  </div>\n  :\n      <LinksModal links={props.link}/>\n  }\n</div>\n}\n\nexport default InternalLinks","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\nimport './button.css'\n\nconst ExternalLinks = (props) => {\n    const coloredButton = props.link.buttonColor;\n\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"} \n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n                altColor={props.link.featuredAltStyle}\n            />\n            <Button \n            as='a' \n            href={props.link.link}\n            {...coloredButton ? {\n                className: `RCPadding ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n                } : {\n                className: `RCPadding RCWhiteBG ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n            }}\n            color={props.link.buttonColor} \n            size='big'\n            fluid>\n                {props.link.name}\n            </Button>\n        </div>\n        :     \n        <Button \n        as='a' \n        href={props.link.link}\n        {...coloredButton ? {\n            className: `RCPadding ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n            } : {\n            className: `RCPadding RCWhiteBG ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n        }}\n        color={props.link.buttonColor} \n        size='big'  \n        fluid>\n            {props.link.name}\n        </Button>\n    }\n    </div>\n}\n\nexport default ExternalLinks","import React from 'react'\nimport Banner from '../Banner/Banner'\nimport ModalMedia from '../ModalMedia/ModalMedia'\nimport '../Links/Links.css'\n\n\nconst ItemLinks = (props) => {\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n                altColor={props.link.featuredAltStyle}\n            />\n            <ModalMedia link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    </div>\n    :\n    <ModalMedia link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    }\n    </div>\n}\n\nexport default ItemLinks","import React from 'react';\nimport { Image, Header } from 'semantic-ui-react';\nimport Banner from '../Banner/Banner';\n\nconst Still_External = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === 'xs'\n                                ? 'bannerPositionS'\n                                : props.deviceSize === 'md'\n                                ? 'bannerPositionM'\n                                : props.deviceSize === 'lg'\n                                ? 'bannerPositionL'\n                                : 'bannerPositionXL'\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <a href={props.link.link}>\n                        <Image\n                            wrapped\n                            size=\"medium\"\n                            src={props.link.mainMedia.link}\n                        />\n                        <Header\n                            as=\"h3\"\n                            textAlign=\"center\"\n                            className=\"RCborderNone RCtopPushoff\"\n                        >\n                            {props.link.modalAlternativeText.text\n                                ? props.link.modalAlternativeText.text\n                                : props.link.mainMedia.mediaText}\n                        </Header>\n                    </a>\n                </div>\n            ) : (\n                <a href={props.link.link}>\n                    <Image\n                        wrapped\n                        size=\"medium\"\n                        src={props.link.mainMedia.link}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </a>\n            )}\n        </div>\n    );\n};\n\nexport default Still_External;\n","import PropTypes from \"prop-types\";\nimport { Dot } from \"pure-react-carousel\";\nimport React from \"react\";\nimport { Button, Container } from \"semantic-ui-react\";\n\nconst CustomDotGroup = ({ slides, size }) => (\n    <Container textAlign=\"center\">\n        <Button.Group size={size}>\n            {[...Array(slides).keys()].map((slide) => (\n                <Button as={Dot} key={slide} icon=\"circle\" slide={slide} />\n            ))}\n        </Button.Group>\n    </Container>\n);\n\nCustomDotGroup.defaultProps = {\n    size: \"mini\",\n};\n\nCustomDotGroup.propTypes = {\n    slides: PropTypes.number.isRequired,\n    size: PropTypes.string,\n};\n\nexport default CustomDotGroup;\n","import React from \"react\";\nimport {\n    CarouselProvider,\n    Slide,\n    Slider,\n    Image,\n    ButtonBack,\n    ButtonNext,\n} from \"pure-react-carousel\";\nimport { Divider } from \"semantic-ui-react\";\nimport CustomDotGroup from \"./CustomDotGroup\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\nconst ImageCarousel = (props) => (\n    <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={110}\n        totalSlides={props.collection.length}\n        interval={props.collection.speed}\n        isPlaying\n    >\n        <Slider>\n            {props.collection.map((img, i) => (\n                <Slide index={i}>\n                    <Image src={img} />\n                </Slide>\n            ))}\n        </Slider>\n\n        <Divider />\n        {props.collection.length > 7 ? (\n            <>\n                <ButtonBack className={\"ui button\"}>Back</ButtonBack>\n                <ButtonNext className={\"ui button\"}>Next</ButtonNext>\n            </>\n        ) : (\n            <CustomDotGroup slides={props.collection.length} />\n        )}\n    </CarouselProvider>\n);\n\nexport default ImageCarousel;\n","import React from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport Banner from \"../Banner/Banner\";\nimport ImageCarousel from \"./ImageCarousel\";\n// import CardCarousel from \"./CardCarousel\";\n\nconst Slideshow = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === \"xs\"\n                                ? \"bannerPositionS\"\n                                : props.deviceSize === \"md\"\n                                ? \"bannerPositionM\"\n                                : props.deviceSize === \"lg\"\n                                ? \"bannerPositionL\"\n                                : \"bannerPositionXL\"\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <ImageCarousel\n                        collection={props.link.mainMedia.collection}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </div>\n            ) : (\n                <div>\n                    <ImageCarousel\n                        collection={props.link.mainMedia.collection}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Slideshow;\n","import React from \"react\";\nimport { Modal, Button, Grid, Header } from \"semantic-ui-react\";\nimport ModalHeader from \"../ModalHeader/ModalHeader\";\nimport \"./BioModal.css\";\n\nconst LinksModal = (props) => {\n    const coloredButton = props.links.buttonColor;\n\n    return (\n        <div>\n            <Modal\n                size=\"small\"\n                trigger={\n                    <Button\n                        fluid\n                        size=\"big\"\n                        color={props.links.buttonColor}\n                        {...(coloredButton\n                            ? {\n                                  className: `RCPadding fontColor ${props.link.fontColor}`,\n                              }\n                            : { className: \"RCPadding RCWhiteBG\" })}\n                    >\n                        {props.links.name}\n                    </Button>\n                }\n                closeIcon\n            >\n                <Grid centered columns={2}>\n                    {props.links.modalAlternativeText.removed ? (\n                        \"\"\n                    ) : (\n                        <Grid.Row className=\"RCTitleFix\">\n                            <ModalHeader data={props.links} />\n                        </Grid.Row>\n                    )}\n                    <Grid.Row className=\"RLBio\">\n                        <Modal.Content image className=\"RCCenter RCPushDown\">\n                            {props.links.bioContent.map((x) => (\n                                <Header as=\"h2\">\n                                    {x.header}\n                                    <Header.Subheader content={x.subHeader} />\n                                </Header>\n                            ))}\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LinksModal;\n","import React from \"react\";\nimport BioModal from \"./BioModal\";\nimport Banner from \"../Banner/Banner\";\nimport \"../Links/Links.css\";\n\nconst Bio = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === \"xs\"\n                                ? \"bannerPositionS\"\n                                : props.deviceSize === \"md\"\n                                ? \"bannerPositionM\"\n                                : props.deviceSize === \"lg\"\n                                ? \"bannerPositionL\"\n                                : \"bannerPositionXL\"\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <BioModal links={props.link} />\n                </div>\n            ) : (\n                <BioModal links={props.link} />\n            )}\n        </div>\n    );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport InternalLinks from \"../InternalLinks/InternalLinks\";\nimport ExternalLinks from \"../ExternalLinks/ExternalLinks\";\nimport ItemLinks from \"../ItemLinks/ItemLinks\";\nimport StillExternal from \"../Still_External/Still_External\";\nimport Slideshow from \"../Slideshow/Slideshow\";\nimport Bio from \"../Bio/Bio\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./Links.css\";\n\n// const pinnedLink = (element) => {\n//     return <Segment\n//     color='green'\n//     className=\"pushDown\">\n//         {isInternalLink(element, )}\n//     </Segment>\n// }\n\nconst Links = (props) => {\n    let spaced = props.link.linkSpaced;\n    let colored = props.link.colored;\n\n    return (\n        <div>\n            {props.link.type === \"internal\" ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? \"\"\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <InternalLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                    />\n                </Segment>\n            ) : props.link.type === \"item\" ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? \"\"\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <ItemLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                    />\n                </Segment>\n            ) : props.link.type === \"still/external\" ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? \"\"\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <StillExternal\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                    />\n                </Segment>\n            ) : props.link.type === \"slideshow\" ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? \"\"\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <Slideshow\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                    />\n                </Segment>\n            ) : props.link.type === \"bio\" ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? \"\"\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <Bio link={props.link} deviceSize={props.deviceSize} />\n                </Segment>\n            ) : (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? \"\"\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <ExternalLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                    />\n                </Segment>\n            )}\n        </div>\n    );\n};\n\nexport default Links;\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport Links from '../Links/Links'\nimport \"./LinkGroup.css\"\n\nconst LinkGroup = (props) => (\n    <div className=\"stretched\">\n        <Header as='h2'>\n            <span>\n                {props.links.groupName}\n            </span>\n        </Header>\n        \n        <div >\n            {props.links.group.map(element => {\n                return <Links link={element} deviceSize={props.deviceSize}/>\n            })}\n        </div>\n    </div>\n)\n\nexport default LinkGroup","import React from 'react';\nimport {Grid, GridColumn, Segment, Image} from 'semantic-ui-react'\nimport Profile from './Profile/Profile'\nimport LinkGroup from './LinkGroup/LinkGroup'\nimport LogoColor from '../../assets/Logo.png'\nimport LogoWhite from '../../assets/LogoWhite.png'\n\nconst whichLogo = (logo) => {\n    if (logo === 'white') {\n        return LogoWhite\n    }\n    return LogoColor\n}\n\nconst Home = (props) => {\n    return <Grid centered>\n        <Grid.Row>\n            <GridColumn>\n                <Profile links={props.socialLinks} deviceSize={props.deviceSize} profileImg={props.profileImage} profileTitle={props.profileTitle} />\n            </GridColumn>\n        </Grid.Row>\n        { props.linkGroups.map((linkData, index) => {\n            return  <Grid.Row>\n                        <LinkGroup key={index} links={linkData} deviceSize={props.deviceSize}/>\n                    </Grid.Row>\n        })\n        }\n        <Segment basic>\n            <Image\n            src={whichLogo(props.logo)}\n            as='a'\n            size='small'\n            href='https://rightclickrva.com/business'\n            target='_blank'\n            spaced\n            />\n        </Segment>\n    </Grid>\n    \n}\nexport default Home","// Custom Colors = [RLGold,RLWhite,RLViolet]\n/* social link custom colors {\n   circle colors: [RLWhite]\n   icon colors: [RLRed]\n}*/\n// if button is colored you must add a fontColor\n// to change border color of a colored button add color to additionalstyles\nexport const TITLE = {\n    title: \"ItsCakess\",\n    color: \"RLWhite\",\n};\nexport const LOGO = \"white\";\nexport const PROFILE_PIC =\n    \"https://res.cloudinary.com/rightlink/image/upload/v1626911606/ItsCakess/IMG_6123_dxt4l0.jpg\";\nexport const BACKGROUND = {\n    image: false,\n    imageLink: \"\",\n    color:\n        \"background-image: linear-gradient(to bottom, #000000, #000000, #000000, #000000, #000000, #000000, #000000, #000000, #000000, #000000, #000000, #000000);\",\n};\nexport const SOCIAL_LINKS = {\n    group: [\n        {\n            name: \"Instagram\",\n            iconName: \"instagram\",\n            link: \"https://www.instagram.com/itscakess\",\n            color: \"violet\",\n            inverted: false,\n            secondaryColor: \"\",\n            surrounded: \"circular\",\n            surroundedInColor: true,\n        },\n        {\n            name: \"Facebook\",\n            iconName: \"facebook\",\n            link: \"https://www.facebook.com/ItsCakess/\",\n            color: \"violet\",\n            inverted: false,\n            secondaryColor: \"\",\n            surrounded: \"circular\",\n            surroundedInColor: false,\n        },\n        {\n            name: \"Twitter\",\n            iconName: \"twitter\",\n            link: \"https://twitter.com/itscakess\",\n            color: \"\",\n            inverted: false,\n            surrounded: \"circular\",\n            secondaryColor: \"RLViolet\",\n            surroundedInColor: false,\n        },\n        {\n            name: \"Soundcloud\",\n            iconName: \"soundcloud\",\n            link: \"https://soundcloud.com/itscakess\",\n            color: \"violet\",\n            inverted: false,\n            secondaryColor: \"\",\n            surrounded: \"circular\",\n            surroundedInColor: false,\n        },\n    ],\n};\n\n// featuredTimerDate formats inclued '2020-02-01T01:02:03' or milliseconds e.g 1580518923000 - documentation here https://github.com/ndresx/react-countdown\n// for media as links you must set type as 'item' and mainMedia.type as either 'still, mp4, or other(not implemented yet)'\nexport const LINK_GROUP_1 = {\n    groupName: \"\",\n    groupColor: \"orange\",\n    group: [\n        {\n            name: \"Keep It Going\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"item\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            featuredAltStyle: \"\",\n            pinned: true,\n            mainMedia: {\n                type: \"video\",\n                link: \"https://youtu.be/aSFyM0iFKVo\",\n                mediaText: \"\",\n                videoPoster: \"\",\n            },\n            additionalLinks: [],\n            color: \"violet\",\n            colorOveride: \"\",\n            fontColor: \"\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n            modalAlternativeText: {\n                removed: true,\n                text: \"\",\n            },\n        },\n        {\n            name: 'Hot Water (Pre-Save)',\n            link: 'https://distrokid.com/hyperfollow/itscakess/hot-water',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: true,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'violet',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: true,\n                text: '',\n            },\n        },\n        {\n            name: \"Stream Itscakess\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"internal\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            featuredAltStyle: \"\",\n            pinned: true,\n            mainMedia: {\n                type: \"still\",\n                link:\n                    \"https://res.cloudinary.com/rightlink/image/upload/v1597512951/ItsCakess/NewLogo_g7zrqo.png\",\n                mediaText: \"Stream ItsCakess Now\",\n                videoPoster: \"\",\n            },\n            additionalLinks: [\n                {\n                    name: \"Tidal\",\n                    link: \"https://listen.tidal.com/artist/19820529\",\n                },\n                {\n                    name: \"Spotify\",\n                    link:\n                        \"https://open.spotify.com/artist/1ctP5DFsr3daxwTSwWUmWg\",\n                },\n                {\n                    name: \"Apple Music\",\n                    link:\n                        \"https://music.apple.com/us/artist/itscakess/1516044629\",\n                },\n                {\n                    name: \"Youtube\",\n                    link:\n                        \"https://www.youtube.com/channel/UC9cVQA74sXyS7qwRfTwT2xw\",\n                },\n                {\n                    name: \"iHeart Music\",\n                    link:\n                        \"https://www.iheart.com/artist/lgunna-itscakess-34170374/\",\n                },\n            ],\n            color: \"violet\",\n            colorOveride: \"\",\n            fontColor: \"\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n            modalAlternativeText: {\n                removed: true,\n                text: \"\",\n            },\n        },\n        {\n            name: \"Keep It Going - Single\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"internal\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            featuredAltStyle: \"bannerRLGold\",\n            pinned: true,\n            mainMedia: {\n                type: \"still\",\n                link:\n                    \"https://res.cloudinary.com/rightlink/image/upload/v1597533035/ItsCakess/LogoBlackGlossy_fdr3u7.png\",\n                mediaText: \"Stream Keep It Going\",\n                videoPoster: \"\",\n            },\n            additionalLinks: [\n                {\n                    name: \"Tidal\",\n                    link: \"https://tidal.com/album/156727836\",\n                },\n                {\n                    name: \"Spotify\",\n                    link:\n                        \"https://open.spotify.com/album/7CIDPvHQo4X53tnt3dM7Lp?si=e5j06vGtQIOmKsHx4othCw\",\n                },\n                {\n                    name: \"Apple Music\",\n                    link:\n                        \"https://music.apple.com/us/album/keep-it-going-single/1535053547\",\n                },\n                {\n                    name: \"Youtube\",\n                    link: \"https://youtu.be/pnV87RtOdW8\",\n                },\n            ],\n            color: \"\",\n            colorOveride: \"violet\",\n            fontColor: \"\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n            modalAlternativeText: {\n                removed: true,\n                text: \"\",\n            },\n        },\n        {\n            name: \"What We Do - Single\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"internal\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            featuredAltStyle: \"bannerRLGold\",\n            pinned: true,\n            mainMedia: {\n                type: \"still\",\n                link:\n                    \"https://res.cloudinary.com/rightlink/image/upload/v1597533035/ItsCakess/LogoBlackGlossy_fdr3u7.png\",\n                mediaText: \"Stream What We Do Now\",\n                videoPoster: \"\",\n            },\n            additionalLinks: [\n                {\n                    name: \"Tidal\",\n                    link: \"https://tidal.com/track/153294701\",\n                },\n                {\n                    name: \"Spotify\",\n                    link:\n                        \"https://open.spotify.com/album/2L7o23kKcxhf7Bwbp9FmuW?si=zWu7cx-yQOmbsOt7siSLiA\",\n                },\n                {\n                    name: \"Apple Music\",\n                    link:\n                        \"https://music.apple.com/us/album/what-we-do-single/1529559638\",\n                },\n                {\n                    name: \"Youtube\",\n                    link: \"https://youtu.be/Myz7O9EW18I\",\n                },\n            ],\n            color: \"violet\",\n            colorOveride: \"\",\n            fontColor: \"\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n            modalAlternativeText: {\n                removed: true,\n                text: \"\",\n            },\n        },\n        {\n            name: \"Touch - Single\",\n            link: \"\",\n            linkSpaced: true,\n            type: \"internal\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            featuredAltStyle: \"\",\n            pinned: true,\n            mainMedia: {\n                type: \"still\",\n                link:\n                    \"https://res.cloudinary.com/rightlink/image/upload/v1597533035/ItsCakess/LogoBlackGlossy_fdr3u7.png\",\n                mediaText: \"Stream Touch Now\",\n                videoPoster: \"\",\n            },\n            additionalLinks: [\n                {\n                    name: \"Tidal\",\n                    link: \"https://tidal.com/track/134167018\",\n                },\n                {\n                    name: \"Spotify\",\n                    link:\n                        \"https://open.spotify.com/album/0w8mZfnXCwrVfaajs5J27t?highlight=spotify:track:30ZjpPqcJBgdhbpW8DSJpY\",\n                },\n                {\n                    name: \"Apple Music\",\n                    link:\n                        \"https://music.apple.com/us/album/touch-single/1502650549\",\n                },\n                {\n                    name: \"Youtube\",\n                    link: \"https://youtu.be/Ae7l0RO_WkE\",\n                },\n            ],\n            color: \"\",\n            colorOveride: \"violet\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n            modalAlternativeText: {\n                removed: true,\n                text: \"\",\n            },\n        },\n        {\n            name: \"Shop - Gold Decisions\",\n            link: \"https://www.shopgolddecisions.com\",\n            linkSpaced: true,\n            type: \"external\",\n            typeAction: \"\",\n            internal: false,\n            featured: false,\n            featuredText: \"\",\n            featuredTimerDate: \"\",\n            featuredTimerText: \"\",\n            featuredColor: \"\",\n            featuredAltStyle: \"\",\n            pinned: true,\n            mainMedia: {},\n            additionalLinks: [],\n            color: \"\",\n            colorOveride: \"violet\",\n            fontColor: \"\",\n            colored: false,\n            buttonColor: \"\",\n            bannerSide: \"left\",\n            additionalStyle: \"longText\",\n            modalAlternativeText: {\n                removed: true,\n                text: \"\",\n            },\n        },\n    ],\n};\n\nexport const ARCHIVE = [\n    {\n        name: \"Keep Up - Single\",\n        link: \"\",\n        linkSpaced: true,\n        type: \"internal\",\n        typeAction: \"\",\n        internal: false,\n        featured: false,\n        featuredText: \"\",\n        featuredTimerDate: \"\",\n        featuredTimerText: \"\",\n        featuredColor: \"\",\n        featuredAltStyle: \"\",\n        pinned: true,\n        mainMedia: {\n            type: \"still\",\n            link:\n                \"https://res.cloudinary.com/rightlink/image/upload/v1597512951/ItsCakess/NewLogo_g7zrqo.png\",\n            mediaText: \"Stream Keep Up Now\",\n            videoPoster: \"\",\n        },\n        additionalLinks: [\n            {\n                name: \"Tidal\",\n                link: \"https://tidal.com/track/147896939\",\n            },\n            {\n                name: \"Spotify\",\n                link:\n                    \"https://open.spotify.com/album/0oR1rFbI6JGwPdKFDQEy1T?si=KCQ2VGXDRviEgfH8eFyCAw\",\n            },\n            {\n                name: \"Apple Music\",\n                link:\n                    \"https://music.apple.com/us/album/keep-up-single/id1522615990\",\n            },\n            {\n                name: \"Youtube\",\n                link: \"https://youtu.be/87kS-vGMao4\",\n            },\n        ],\n        color: \"\",\n        colorOveride: \"RLGold\",\n        colored: false,\n        buttonColor: \"\",\n        bannerSide: \"left\",\n        additionalStyle: \"longText\",\n        modalAlternativeText: {\n            removed: true,\n            text: \"\",\n        },\n    },\n    {\n        name: \"Pre-order Keep It Going\",\n        link: \"https://distrokid.com/hyperfollow/itscakess/keep-it-going\",\n        linkSpaced: true,\n        type: \"external\",\n        typeAction: \"\",\n        internal: false,\n        featured: false,\n        featuredText: \"\",\n        featuredTimerDate: \"\",\n        featuredTimerText: \"\",\n        featuredColor: \"\",\n        featuredAltStyle: \"\",\n        pinned: true,\n        mainMedia: {},\n        additionalLinks: [],\n        color: \"\",\n        colorOveride: \"RLGold\",\n        fontColor: \"RLRed\",\n        colored: false,\n        buttonColor: \"\",\n        bannerSide: \"left\",\n        additionalStyle: \"longText RLGold\",\n        modalAlternativeText: {\n            removed: true,\n            text: \"\",\n        },\n    },\n    {\n        name: \"Crosses\",\n        link: \"\",\n        linkSpaced: true,\n        type: \"item\",\n        typeAction: \"\",\n        internal: false,\n        featured: false,\n        featuredText: \"\",\n        featuredTimerDate: \"\",\n        featuredTimerText: \"\",\n        featuredColor: \"\",\n        featuredAltStyle: \"\",\n        pinned: true,\n        mainMedia: {\n            type: \"video\",\n            link: \"https://youtu.be/KPalbG29bUw\",\n            mediaText: \"\",\n            videoPoster: \"\",\n        },\n        additionalLinks: [],\n        color: \"\",\n        colorOveride: \"RLGold\",\n        fontColor: \"\",\n        colored: false,\n        buttonColor: \"\",\n        bannerSide: \"left\",\n        additionalStyle: \"longText\",\n        modalAlternativeText: {\n            removed: true,\n            text: \"\",\n        },\n    },\n];\n","import React from 'react';\nimport Home from './Home/components/Home';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { createUseStyles } from 'react-jss';\nimport {\n    LOGO,\n    BACKGROUND,\n    SOCIAL_LINKS,\n    LINK_GROUP_1,\n    TITLE,\n    PROFILE_PIC,\n} from './assets/usersData/ItsCakes/data.js';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = createUseStyles({\n    backgroundImg: {\n        'background-image': `url(${\n            BACKGROUND.image ? BACKGROUND.imageLink : ''\n        })`,\n        'background-repeat': 'no-repeat',\n        'background-position': '50% 45%',\n        'background-attachment': 'fixed',\n        'background-size': 'contain',\n    },\n    //  'background-color': `${BACKGROUND.color}`\n});\n\nconst linkGroups = [LINK_GROUP_1];\n\nconst App = () => {\n    const xsScreen = useMediaPredicate('(max-width: 430px)');\n    const mdScreen = useMediaPredicate('(max-width: 768px)');\n    const lgScreen = useMediaPredicate('(max-width: 1024px)');\n    const classes = useStyles();\n\n    return (\n        <div className={classes.backgroundImg}>\n            {console.log('window Width', window.innerWidth)}\n            <Helmet>\n                <title>Right-Link</title>\n                <style>\n                    {`\n              .RLgradient {\n                ${BACKGROUND.color}\n               }\n            `}\n                </style>\n            </Helmet>\n            <Home\n                deviceSize={\n                    xsScreen ? 'xs' : mdScreen ? 'md' : lgScreen ? 'lg' : 'xl'\n                }\n                socialLinks={SOCIAL_LINKS}\n                profileTitle={TITLE}\n                profileImage={PROFILE_PIC}\n                linkGroups={linkGroups}\n                logo={LOGO}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}