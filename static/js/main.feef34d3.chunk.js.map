{"version":3,"sources":["assets/Logo.png","assets/LogoWhite.png","Home/components/SocialLink/SocialLink.js","Home/components/SocialLinks/SocialLinks.js","Home/components/ProfilePic/ProfilePic.js","Home/components/Profile/Profile.js","Home/components/ModalHeader/ModalHeader.js","Home/components/MP4video/MP4video.js","Home/components/ModalMedia/ModalMedia.js","Home/components/ModalLinks/ModalLinks.js","Home/components/LinksModal/LinksModal.js","Home/components/BannerTimer/BannerTimer.js","Home/components/Banner/Banner.js","Home/components/InternalLinks/InternalLinks.js","Home/components/ExternalLinks/ExternalLinks.js","Home/components/ItemLinks/ItemLinks.js","Home/components/Still_External/Still_External.js","Home/components/Slideshow/CustomDotGroup.js","Home/components/Slideshow/ImageCarousel.js","Home/components/Slideshow/Slideshow.js","Home/components/Bio/BioModal.js","Home/components/Bio/Bio.js","Home/components/Links/Links.js","Home/components/LinkGroup/LinkGroup.js","Home/components/Home.js","assets/usersData/RazorRamon/data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","boxed","surrounded","SocialLink","props","href","link","Icon","className","secondaryColor","name","iconName","inverted","circular","bordered","color","SocialLinks","links","group","map","element","ProfilePic","Image","src","rounded","Profile","Header","as","textAlign","profileTitle","style","fontSize","title","Grid","Row","Column","profileImg","ModalHeader","data","modalAlternativeText","text","MP4video","dangerouslySetInnerHTML","__html","w","h","poster","video","useStyles","createUseStyles","customFont","ModalMedia","type","vidPoster","classes","mainMedia","deviceSize","videoPoster","wrapped","size","url","width","height","Modal","Description","mediaText","ModalLinks","Button","fluid","LinksModal","coloredButton","buttonColor","trigger","fontColor","closeIcon","centered","columns","removed","Content","image","additionalLinks","BannerTimer","Completionist","completeText","date","dateTime","renderer","days","hours","minutes","seconds","completed","zeroPad","Banner","timer","Label","ribbon","bannerSide","altColor","InternalLinks","featured","featuredText","featuredColor","featuredTimerDate","featuredTimerText","featuredAltStyle","ExternalLinks","ItemLinks","Still_External","CustomDotGroup","slides","Container","Group","Array","keys","slide","Dot","key","icon","defaultProps","ImageCarousel","naturalSlideWidth","naturalSlideHeight","totalSlides","collection","length","interval","speed","isPlaying","img","i","index","Divider","Slideshow","bioContent","x","header","Subheader","content","subHeader","Bio","Links","spaced","linkSpaced","colored","Segment","raised","additionalStyle","colorOveride","LinkGroup","groupColor","groupName","Home","GridColumn","socialLinks","profileImage","linkGroups","linkData","basic","logo","LogoWhite","LogoColor","target","TITLE","BACKGROUND","SOCIAL_LINKS","surroundedInColor","LINK_GROUP_1","groupFont","typeAction","internal","pinned","root","backgroundImg","App","xsScreen","useMediaPredicate","mdScreen","lgScreen","console","log","window","innerWidth","Helmet","fonts","font","weights","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.feef34d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.d9d4f134.png\";","module.exports = __webpack_public_path__ + \"static/media/LogoWhite.17285244.png\";","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './SocialLink.css';\n\nfunction circled(surrounded) {\n    if (surrounded === 'circular') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction boxed(surrounded) {\n    if (surrounded === 'bordered') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst SocialLink = (props) => {\n    return (\n        <a href={props.link.link}>\n            <Icon\n                className={`RLSocialPad ${\n                    props.link.secondaryColor ? props.link.secondaryColor : ''\n                }`}\n                name={props.link.iconName}\n                inverted={props.link.inverted}\n                circular={circled(props.link.surrounded)}\n                bordered={boxed(props.link.surrounded)}\n                color={props.link.color}\n            />\n        </a>\n    );\n};\n\nexport default SocialLink;\n","import React from 'react'\nimport SocialLink from '../SocialLink/SocialLink'\n\nconst SocialLinks = (props) => (\n    <div>\n        {props.links.group.map(element => {\n            return <SocialLink link={element}/>\n        })}\n    </div>\n)\n\nexport default SocialLinks","import React from 'react'\nimport {Image} from 'semantic-ui-react'\nimport './style.css'\n// import StockImg from './image.png'\n\nconst ProfilePic = (props) => (\n    <Image src={props.src} className=\"RLFixCenter RLOneSize\" rounded />\n)\n\nexport default ProfilePic","import React from 'react';\nimport { Header, Grid } from 'semantic-ui-react';\nimport SocialLinks from '../SocialLinks/SocialLinks';\nimport ProfilePic from '../ProfilePic/ProfilePic';\nimport './profile.css';\n\nconst Profile = (props) => (\n    <div>\n        <Header\n            as=\"h1\"\n            textAlign=\"center\"\n            className={`RCTopPadding RCMarginBottom ${props.profileTitle.color}`}\n            style={{\n                fontSize: '2.5em',\n            }}\n        >\n            {props.profileTitle.title}\n        </Header>\n        <Header as=\"h2\" textAlign=\"center\" className=\"RCMarginTop\">\n            <Grid textAlign=\"center\" className=\"RCSpace-5\">\n                <Grid.Row className=\"RCNoTopPadding RCMarginBottom-2\">\n                    <SocialLinks links={props.links} />\n                </Grid.Row>\n                <Grid.Row className=\"RCNoTopPadding\">\n                    <Grid.Column textAlign=\"center\">\n                        <ProfilePic src={props.profileImg} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Header>\n    </div>\n);\n\nexport default Profile;\n","import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport './ModalHeader.css'\n\nconst ModalHeader = (props) => {\n    return <Header as='h1' textAlign='center' className='RCborderNone RCtopPushoff'>{props.data.modalAlternativeText.text ? props.data.modalAlternativeText.text : props.data.name}</Header>\n}\n\nexport default ModalHeader","import React from 'react'\n\nconst MP4video = (props) => (\n    <div\n        dangerouslySetInnerHTML={{\n            __html:`\n            <video\n            loop\n            muted\n            playsinline\n            autoplay\n            style=\"width:${props.w}; height:${props.h}\"\n            poster=\"${props.poster}\"\n            >\n            <source type=\"video/mp4\" src=\"${props.video}\" />\n            </video>`\n        }}\n    />\n)\n\nexport default MP4video","import React from 'react';\nimport {createUseStyles} from 'react-jss';\nimport { Modal, Image } from 'semantic-ui-react'\nimport ReactPlayer from 'react-player'\nimport MP4video from '../MP4video/MP4video'\nimport './ModalMedia.css'\n\n// use react-player for video that doesn't need to auto play\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': props => props.customFont ? [props.customFont, '!important'] : ['Lato', '!important']\n    },\n})\n\nfunction whichMedia(type, link, dSize, vidPoster) {\n    if (type === \"still\"){\n        return <Image wrapped size='medium' src={link} />\n    } else if ( type === \"mp4\") {\n        return dSize === 'xs' || 'md' ? \n                <MP4video video={link} w=\"100%\" h=\"100%\" poster={vidPoster}/>\n                :\n                <MP4video video={link} w=\"50%\" h=\"50%\"/>\n    }\n    return <ReactPlayer url={link} width='100%' height='100%' />\n} \n\nconst ModalMedia = (props) => {\n    const classes = useStyles(props)\n\n    return <div className='center'>\n        {whichMedia(props.link.mainMedia.type, props.link.mainMedia.link, props.deviceSize, props.link.mainMedia.videoPoster)}\n        <Modal.Description className=\"pushOff-y\">\n            <h3 className={classes.customFont}>{props.link.mainMedia.mediaText}</h3>\n        </Modal.Description>\n    </div>\n}\n\nexport default ModalMedia","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport './ModalLinks.css'\n\nconst ModalLinks = (props) => {\n    return <Button \n            as='a' \n            href={props.link.link}\n            fluid\n            className=\"pushoffButtom\"\n            >\n                {props.link.name}\n            </Button>\n}\n\nexport default ModalLinks","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Modal, Button, Grid } from 'semantic-ui-react';\nimport ModalHeader from '../ModalHeader/ModalHeader';\nimport ModalMedia from '../ModalMedia/ModalMedia';\nimport ModalLinks from '../ModalLinks/ModalLinks';\nimport './LinkModal.css';\nimport './button.css';\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': (props) => props.customFont,\n    },\n});\n\nconst LinksModal = (props) => {\n    const classes = useStyles(props);\n    const coloredButton = props.links.buttonColor;\n\n    return (\n        <div>\n            <Modal\n                size=\"small\"\n                trigger={\n                    <Button\n                        fluid\n                        size=\"big\"\n                        color={props.links.buttonColor}\n                        {...(coloredButton\n                            ? {\n                                  className: `RCPadding fontColor ${props.links.fontColor} ${classes.customFont}`,\n                              }\n                            : {\n                                  className: `RCPadding RCWhiteBG ${classes.customFont}`,\n                              })}\n                    >\n                        {props.links.name}\n                    </Button>\n                }\n                closeIcon\n            >\n                <Grid centered columns={2}>\n                    {props.links.modalAlternativeText.removed ? (\n                        ''\n                    ) : (\n                        <Grid.Row className=\"RCTitleFix\">\n                            <ModalHeader data={props.links} />\n                        </Grid.Row>\n                    )}\n                    <Grid.Row>\n                        <Modal.Content image className=\"RCCenter RCPushDown\">\n                            <ModalMedia link={props.links} />\n                            {props.links.additionalLinks\n                                ? props.links.additionalLinks.map((element) => {\n                                      return <ModalLinks link={element} />;\n                                  })\n                                : ' '}\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LinksModal;\n","import React from 'react'\nimport Countdown, { zeroPad } from 'react-countdown';\n                                                                                                                       \n\nconst BannerTimer = (props) => {\n    // Random component\n    const Completionist = () => <span>{props.completeText}</span>;\n\n    // Renderer callback with condition\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n        // Render a completed state\n        return <Completionist />;\n    } else {\n        // Render a countdown\n        return <span>{days} days {zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}</span>;\n  }\n};\n\n    return <Countdown date={props.dateTime} renderer={renderer} />\n}\n\nexport default BannerTimer","import React from 'react'\nimport { Label } from 'semantic-ui-react'\nimport BannerTimer from '../BannerTimer/BannerTimer'\nimport './style.css'\n\nconst Banner = (props) => {\n    return <div>\n            {props.timer ? \n                <Label as='a' color={props.color} ribbon={props.bannerSide} className={`${props.deviceSize} ${props.altColor}`}>\n                {props.text}  <BannerTimer dateTime={props.timer} text={props.completeText}/>\n                </Label>\n            :\n                <Label as='a' color={props.color} ribbon={props.bannerSide} className={`${props.deviceSize} ${props.altColor}`}>\n                    {props.text}\n                </Label>\n            }\n    </div>\n}\n\nexport default Banner","import React from 'react'\nimport LinksModal from '../LinksModal/LinksModal'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\n\nconst InternalLinks = (props) => {\n  return <div>\n    {props.link.featured \n    ?\n    <div>\n      <Banner \n        text={props.link.featuredText} \n        color={props.link.featuredColor} \n        bannerSide={props.link.bannerSide} \n        deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n        timer={props.link.featuredTimerDate}\n        completeText={props.link.featuredTimerText}\n        altColor={props.link.featuredAltStyle}\n      />\n      <LinksModal links={props.link} customFont={props.customFont}/>\n  </div>\n  :\n      <LinksModal links={props.link} customFont={props.customFont}/>\n  }\n</div>\n}\n\nexport default InternalLinks","import React from 'react';\nimport {createUseStyles} from 'react-jss';\nimport { Button } from 'semantic-ui-react'\nimport Banner from '../Banner/Banner'\nimport '../Links/Links.css'\nimport './button.css'\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': props => [props.customFont, '!important'] \n    },\n});\n\nconst ExternalLinks = (props) => {\n    const classes = useStyles(props)\n    const coloredButton = props.link.buttonColor;\n\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"} \n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n                altColor={props.link.featuredAltStyle}\n            />\n            <Button \n            as='a' \n            href={props.link.link}\n            {...coloredButton ? {\n                className: `RCPadding ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n                } : {\n                className: `RCPadding RCWhiteBG ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n            }}\n            color={props.link.buttonColor} \n            size='big'\n            fluid>\n                {props.link.name}\n            </Button>\n        </div>\n        :     \n        <Button \n        as='a' \n        href={props.link.link}\n        {...coloredButton ? {\n            className: `RCPadding ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n            } : {\n            className: `RCPadding RCWhiteBG ${classes.customFont} ${props.link.fontColor ? `fontColor ${props.link.fontColor}` : \"\"}`\n        }}\n        color={props.link.buttonColor} \n        size='big'  \n        fluid>\n            {props.link.name}\n        </Button>\n    }\n    </div>\n}\n\nexport default ExternalLinks","import React from 'react'\nimport Banner from '../Banner/Banner'\nimport ModalMedia from '../ModalMedia/ModalMedia'\nimport '../Links/Links.css'\n\n\nconst ItemLinks = (props) => {\n    return <div>\n        {props.link.featured \n        ?\n        <div>\n            <Banner \n                text={props.link.featuredText} \n                color={props.link.featuredColor} \n                bannerSide={props.link.bannerSide} \n                deviceSize={props.deviceSize === 'xs' ? \"bannerPositionS\" : props.deviceSize === \"md\" ? \"bannerPositionM\" : props.deviceSize === \"lg\" ? \"bannerPositionL\" : \"bannerPositionXL\"}\n                timer={props.link.featuredTimerDate}\n                completeText={props.link.featuredTimerText}\n                altColor={props.link.featuredAltStyle}\n            />\n            <ModalMedia customFont={props.customFont} link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    </div>\n    :\n    <ModalMedia customFont={props.customFont} link={props.link} type={props.link.type} deviceSize={props.deviceSize}/>\n    }\n    </div>\n}\n\nexport default ItemLinks","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Image, Header } from 'semantic-ui-react';\nimport Banner from '../Banner/Banner';\n\nconst useStyles = createUseStyles({\n    customFont: {\n        'font-family': (props) =>\n            props.customFont ? [props.customFont, '!important'] : '',\n    },\n});\n\nconst Still_External = (props) => {\n    const classes = useStyles(props);\n\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === 'xs'\n                                ? 'bannerPositionS'\n                                : props.deviceSize === 'md'\n                                ? 'bannerPositionM'\n                                : props.deviceSize === 'lg'\n                                ? 'bannerPositionL'\n                                : 'bannerPositionXL'\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <a href={props.link.link}>\n                        <Image\n                            wrapped\n                            size=\"medium\"\n                            src={props.link.mainMedia.link}\n                        />\n                        <Header\n                            as=\"h3\"\n                            textAlign=\"center\"\n                            className={`RCborderNone RCtopPushoff ${classes.customFont}`}\n                        >\n                            {props.link.modalAlternativeText.text\n                                ? props.link.modalAlternativeText.text\n                                : props.link.mainMedia.mediaText}\n                        </Header>\n                    </a>\n                </div>\n            ) : (\n                <a href={props.link.link}>\n                    <Image\n                        wrapped\n                        size=\"medium\"\n                        src={props.link.mainMedia.link}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className={`RCborderNone RCtopPushoff TEST ${classes.customFont}`}\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </a>\n            )}\n        </div>\n    );\n};\n\nexport default Still_External;\n","import PropTypes from \"prop-types\";\nimport { Dot } from \"pure-react-carousel\";\nimport React from \"react\";\nimport { Button, Container } from \"semantic-ui-react\";\n\nconst CustomDotGroup = ({ slides, size }) => (\n    <Container textAlign=\"center\">\n        <Button.Group size={size}>\n            {[...Array(slides).keys()].map((slide) => (\n                <Button as={Dot} key={slide} icon=\"circle\" slide={slide} />\n            ))}\n        </Button.Group>\n    </Container>\n);\n\nCustomDotGroup.defaultProps = {\n    size: \"mini\",\n};\n\nCustomDotGroup.propTypes = {\n    slides: PropTypes.number.isRequired,\n    size: PropTypes.string,\n};\n\nexport default CustomDotGroup;\n","import React from \"react\";\nimport {\n    CarouselProvider,\n    Slide,\n    Slider,\n    Image,\n    ButtonBack,\n    ButtonNext,\n} from \"pure-react-carousel\";\nimport { Divider } from \"semantic-ui-react\";\nimport CustomDotGroup from \"./CustomDotGroup\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\nconst ImageCarousel = (props) => (\n    <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={110}\n        totalSlides={props.collection.length}\n        interval={props.collection.speed}\n        isPlaying\n    >\n        <Slider>\n            {props.collection.map((img, i) => (\n                <Slide index={i}>\n                    <Image src={img} />\n                </Slide>\n            ))}\n        </Slider>\n\n        <Divider />\n        {props.collection.length > 7 ? (\n            <>\n                <ButtonBack className={\"ui button\"}>Back</ButtonBack>\n                <ButtonNext className={\"ui button\"}>Next</ButtonNext>\n            </>\n        ) : (\n            <CustomDotGroup slides={props.collection.length} />\n        )}\n    </CarouselProvider>\n);\n\nexport default ImageCarousel;\n","import React from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport Banner from \"../Banner/Banner\";\nimport ImageCarousel from \"./ImageCarousel\";\n// import CardCarousel from \"./CardCarousel\";\n\nconst Slideshow = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === \"xs\"\n                                ? \"bannerPositionS\"\n                                : props.deviceSize === \"md\"\n                                ? \"bannerPositionM\"\n                                : props.deviceSize === \"lg\"\n                                ? \"bannerPositionL\"\n                                : \"bannerPositionXL\"\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <ImageCarousel\n                        collection={props.link.mainMedia.collection}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </div>\n            ) : (\n                <div>\n                    <ImageCarousel\n                        collection={props.link.mainMedia.collection}\n                    />\n                    <Header\n                        as=\"h3\"\n                        textAlign=\"center\"\n                        className=\"RCborderNone RCtopPushoff\"\n                    >\n                        {props.link.modalAlternativeText.text\n                            ? props.link.modalAlternativeText.text\n                            : props.link.mainMedia.mediaText}\n                    </Header>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Slideshow;\n","import React from \"react\";\nimport { Modal, Button, Grid, Header } from \"semantic-ui-react\";\nimport ModalHeader from \"../ModalHeader/ModalHeader\";\nimport \"./BioModal.css\";\n\nconst LinksModal = (props) => {\n    const coloredButton = props.links.buttonColor;\n\n    return (\n        <div>\n            <Modal\n                size=\"small\"\n                trigger={\n                    <Button\n                        fluid\n                        size=\"big\"\n                        color={props.links.buttonColor}\n                        {...(coloredButton\n                            ? {\n                                  className: `RCPadding fontColor ${props.link.fontColor}`,\n                              }\n                            : { className: \"RCPadding RCWhiteBG\" })}\n                    >\n                        {props.links.name}\n                    </Button>\n                }\n                closeIcon\n            >\n                <Grid centered columns={2}>\n                    {props.links.modalAlternativeText.removed ? (\n                        \"\"\n                    ) : (\n                        <Grid.Row className=\"RCTitleFix\">\n                            <ModalHeader data={props.links} />\n                        </Grid.Row>\n                    )}\n                    <Grid.Row className=\"RLBio\">\n                        <Modal.Content image className=\"RCCenter RCPushDown\">\n                            {props.links.bioContent.map((x) => (\n                                <Header as=\"h2\">\n                                    {x.header}\n                                    <Header.Subheader content={x.subHeader} />\n                                </Header>\n                            ))}\n                        </Modal.Content>\n                    </Grid.Row>\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LinksModal;\n","import React from \"react\";\nimport BioModal from \"./BioModal\";\nimport Banner from \"../Banner/Banner\";\nimport \"../Links/Links.css\";\n\nconst Bio = (props) => {\n    return (\n        <div>\n            {props.link.featured ? (\n                <div>\n                    <Banner\n                        text={props.link.featuredText}\n                        color={props.link.featuredColor}\n                        bannerSide={props.link.bannerSide}\n                        deviceSize={\n                            props.deviceSize === \"xs\"\n                                ? \"bannerPositionS\"\n                                : props.deviceSize === \"md\"\n                                ? \"bannerPositionM\"\n                                : props.deviceSize === \"lg\"\n                                ? \"bannerPositionL\"\n                                : \"bannerPositionXL\"\n                        }\n                        timer={props.link.featuredTimerDate}\n                        completeText={props.link.featuredTimerText}\n                        altColor={props.link.featuredAltStyle}\n                    />\n                    <BioModal links={props.link} />\n                </div>\n            ) : (\n                <BioModal links={props.link} />\n            )}\n        </div>\n    );\n};\n\nexport default Bio;\n","import React from 'react';\nimport InternalLinks from '../InternalLinks/InternalLinks';\nimport ExternalLinks from '../ExternalLinks/ExternalLinks';\nimport ItemLinks from '../ItemLinks/ItemLinks';\nimport StillExternal from '../Still_External/Still_External';\nimport Slideshow from '../Slideshow/Slideshow';\nimport Bio from '../Bio/Bio';\nimport { Segment } from 'semantic-ui-react';\nimport './Links.css';\n\n// const pinnedLink = (element) => {\n//     return <Segment\n//     color='green'\n//     className=\"pushDown\">\n//         {isInternalLink(element, )}\n//     </Segment>\n// }\n// const useStyles = createUseStyles({\n//     customFont: {\n//         'font-family': props => props.customFont\n//     },\n//     //  'background-color': `${BACKGROUND.color}`\n// })\n\nconst Links = (props) => {\n    let spaced = props.link.linkSpaced;\n    let colored = props.link.colored;\n    // const classes = useStyles(props)\n\n    // const useStyles = createUseStyles({\n    //     customFont: {\n    //         'font-family': `${props.customFont}`\n    //     },\n    //     //  'background-color': `${BACKGROUND.color}`\n    // })\n\n    return (\n        <div>\n            {props.link.type === 'internal' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <InternalLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'item' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <ItemLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'still/external' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <StillExternal\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'slideshow' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <Slideshow\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : props.link.type === 'bio' ? (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <Bio\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            ) : (\n                <Segment\n                    color={props.link.color}\n                    {...(colored ? { inverted: true } : {})}\n                    {...(spaced\n                        ? {\n                              raised: true,\n                              className: `pushDown ${\n                                  props.link.additionalStyle\n                              } ${\n                                  props.link.color\n                                      ? ''\n                                      : props.link.colorOveride\n                              }`,\n                          }\n                        : {})}\n                >\n                    <ExternalLinks\n                        link={props.link}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                </Segment>\n            )}\n        </div>\n    );\n};\n\nexport default Links;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport Links from '../Links/Links';\nimport './LinkGroup.css';\n\nconst LinkGroup = (props) => (\n    <div className=\"stretched\">\n        <Header as=\"h2\" color={props.links.groupColor}>\n            <span>{props.links.groupName}</span>\n        </Header>\n\n        <div>\n            {props.links.group.map((element) => {\n                return (\n                    <Links\n                        link={element}\n                        deviceSize={props.deviceSize}\n                        customFont={props.customFont}\n                    />\n                );\n            })}\n        </div>\n    </div>\n);\n\nexport default LinkGroup;\n","import React from 'react';\nimport { Grid, GridColumn, Segment, Image } from 'semantic-ui-react';\nimport Profile from './Profile/Profile';\nimport LinkGroup from './LinkGroup/LinkGroup';\nimport LogoColor from '../../assets/Logo.png';\nimport LogoWhite from '../../assets/LogoWhite.png';\nimport './Home.css';\n\nconst whichLogo = (logo) => {\n    if (logo === 'white') {\n        return LogoWhite;\n    }\n    return LogoColor;\n};\n\nconst Home = (props) => {\n    return (\n        <Grid centered className=\"RCMarginTop-1\">\n            <Grid.Row className=\"RCMarginBottom-2\">\n                <GridColumn>\n                    <Profile\n                        links={props.socialLinks}\n                        deviceSize={props.deviceSize}\n                        profileImg={props.profileImage}\n                        profileTitle={props.profileTitle}\n                    />\n                </GridColumn>\n            </Grid.Row>\n            {props.linkGroups.map((linkData, index) => {\n                return (\n                    <Grid.Row className=\"RCNoTopPadding RCMarginBottom-2\">\n                        <LinkGroup\n                            key={index}\n                            links={linkData}\n                            deviceSize={props.deviceSize}\n                            customFont={props.customFont}\n                        />\n                    </Grid.Row>\n                );\n            })}\n            <Segment basic className=\"RCMarginBottom-1\">\n                <Image\n                    src={whichLogo(props.logo)}\n                    as=\"a\"\n                    size=\"small\"\n                    href=\"https://rightclickrva.com/business\"\n                    target=\"_blank\"\n                    spaced\n                />\n            </Segment>\n        </Grid>\n    );\n};\nexport default Home;\n","// Custom Colors = [RLGold,RLWhite]\n/* social link custom colors {\n   circle colors: [RLWhite]\n   icon colors: [RLRed]\n}*/\nexport const TITLE = {\n    title: 'Rayzor Ramon',\n    color: 'RLWhite',\n};\nexport const LOGO = 'colored';\nexport const PROFILE_PIC =\n    'https://res.cloudinary.com/rightlink/image/upload/v1640960524/RazorRamon/razorRamon_hwe9lz.jpg';\nexport const BACKGROUND = {\n    image: false,\n    imageLink: '',\n    color:\n        'background-image: linear-gradient(to right bottom, #12000d, #140016, #12001e, #140728, #110e33, #0b133e, #1a194d, #2a1e5c, #3b236a, #4e2778);',\n};\nexport const SOCIAL_LINKS = {\n    group: [\n        {\n            name: 'Instagram',\n            iconName: 'instagram',\n            link: 'https://www.instagram.com/rayzor_ramon_the_barber_',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n        {\n            name: 'Twitter',\n            iconName: 'twitter',\n            link: 'https://twitter.com/rayzzorramon',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n        {\n            name: 'Facebook',\n            iconName: 'facebook f',\n            link:\n                'https://www.facebook.com/Rayzor-Ramon-The-Bar-Ber-202433150376767/',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n        {\n            name: 'Youtube',\n            iconName: 'youtube',\n            link: 'https://youtube.com/channel/UCwUd_9OcxPl9qOyEk6PRihA',\n            color: 'red',\n            inverted: true,\n            secondaryColor: '',\n            surrounded: 'circular',\n            surroundedInColor: true,\n        },\n    ],\n};\n// featuredTimerDate formats inclued '2020-02-01T01:02:03' or milliseconds e.g 1580518923000 - documentation here https://github.com/ndresx/react-countdown\n// for media as links you must set type as 'item' and mainMedia.type as either 'still, mp4, or other(not implemented yet)'\nexport const LINK_GROUP_1 = {\n    groupName: 'Book a Cut Today',\n    groupColor: 'RLWhite',\n    groupFont: '',\n    group: [\n        {\n            name: 'Personal Appointments',\n            link: 'https://book.thecut.co/RAYZORAMONTHEBARBER',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'red',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n        },\n        {\n            name: 'Shop Appointments',\n            link:\n                'https://online.getsquire.com/book/taylors-barbershop-richmond/professional/sergio-31',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'red',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n        },\n        {\n            name: 'Beard Care & Apparel',\n            link: 'https://rayzorramonthebarber.bigcartel.com',\n            linkSpaced: true,\n            type: 'external',\n            typeAction: '',\n            internal: false,\n            featured: false,\n            featuredText: '',\n            featuredTimerDate: '',\n            featuredTimerText: '',\n            featuredColor: '',\n            featuredAltStyle: '',\n            pinned: false,\n            mainMedia: {},\n            additionalLinks: [],\n            color: 'red',\n            colorOveride: '',\n            fontColor: '',\n            colored: false,\n            buttonColor: '',\n            bannerSide: 'left',\n            additionalStyle: 'longText',\n            modalAlternativeText: {\n                removed: false,\n                text: '',\n            },\n        },\n    ],\n};\n","import React from 'react';\nimport Home from './Home/components/Home';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { createUseStyles } from 'react-jss';\nimport GoogleFontLoader from 'react-google-font-loader';\nimport {\n    LOGO,\n    BACKGROUND,\n    SOCIAL_LINKS,\n    LINK_GROUP_1,\n    TITLE,\n    PROFILE_PIC,\n} from './assets/usersData/RazorRamon/data';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\n\nconst useStyles = createUseStyles({\n    root: {\n        height: `100%`,\n    },\n    backgroundImg: {\n        'background-image': `url(${\n            BACKGROUND.image ? BACKGROUND.imageLink : ''\n        })`,\n        'background-repeat': 'no-repeat',\n        'background-position': '50% 45%',\n        'background-attachment': 'fixed',\n        'background-size': 'contain',\n    },\n    //  'background-color': `${BACKGROUND.color}`\n});\n\nconst linkGroups = [LINK_GROUP_1];\n\nconst App = () => {\n    const xsScreen = useMediaPredicate('(max-width: 430px)');\n    const mdScreen = useMediaPredicate('(max-width: 768px)');\n    const lgScreen = useMediaPredicate('(max-width: 1024px)');\n    const classes = useStyles();\n\n    return (\n        <div className={BACKGROUND.image ? classes.backgroundImg : ''}>\n            {console.log('window Width', window.innerWidth)}\n            <Helmet>\n                <title>Right-Link</title>\n                <style>\n                    {`\n              .RLgradient {\n                ${BACKGROUND.color}\n               }\n                .root {\n                    height: 100%;\n                    overflow-x: hidden;\n                }\n            `}\n                </style>\n            </Helmet>\n            <GoogleFontLoader\n                fonts={[\n                    {\n                        font: LINK_GROUP_1.groupFont,\n                        weights: [400],\n                    },\n                ]}\n            />\n            <Home\n                deviceSize={\n                    xsScreen ? 'xs' : mdScreen ? 'md' : lgScreen ? 'lg' : 'xl'\n                }\n                socialLinks={SOCIAL_LINKS}\n                profileTitle={TITLE}\n                profileImage={PROFILE_PIC}\n                linkGroups={linkGroups}\n                logo={LOGO}\n                customFont={LINK_GROUP_1.groupFont}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}